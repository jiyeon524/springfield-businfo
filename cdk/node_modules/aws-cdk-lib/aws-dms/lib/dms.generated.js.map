{
  "version": 3,
  "sources": ["dms.generated.ts"],
  "sourcesContent": ["// Copyright 2012-2022 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// Generated from the AWS CloudFormation Resource Specification\n// See: docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/cfn-resource-specification.html\n// @cfn2ts:meta@ {\"generated\":\"2022-03-17T13:27:34.772Z\",\"fingerprint\":\"vDQW/lig7kwKU4mulHzzBMgi+kDPxC67MYaL3cY/MG8=\"}\n\n/* eslint-disable max-len */ // This is generated code - line lengths are difficult to control\n\nimport * as constructs from 'constructs';\nimport * as cdk from '../../core';\nimport * as cfn_parse from '../../core/lib/cfn-parse';\n\n/**\n * Properties for defining a `CfnCertificate`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html\n */\nexport interface CfnCertificateProps {\n\n    /**\n     * A customer-assigned name for the certificate. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificateidentifier\n     */\n    readonly certificateIdentifier?: string;\n\n    /**\n     * The contents of a `.pem` file, which contains an X.509 certificate.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificatepem\n     */\n    readonly certificatePem?: string;\n\n    /**\n     * The location of an imported Oracle Wallet certificate for use with SSL. Example: `filebase64(\"${path.root}/rds-ca-2019-root.sso\")`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificatewallet\n     */\n    readonly certificateWallet?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnCertificateProps`\n *\n * @param properties - the TypeScript properties of a `CfnCertificateProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnCertificatePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('certificateIdentifier', cdk.validateString)(properties.certificateIdentifier));\n    errors.collect(cdk.propertyValidator('certificatePem', cdk.validateString)(properties.certificatePem));\n    errors.collect(cdk.propertyValidator('certificateWallet', cdk.validateString)(properties.certificateWallet));\n    return errors.wrap('supplied properties not correct for \"CfnCertificateProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Certificate` resource\n *\n * @param properties - the TypeScript properties of a `CfnCertificateProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Certificate` resource.\n */\n// @ts-ignore TS6133\nfunction cfnCertificatePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnCertificatePropsValidator(properties).assertSuccess();\n    return {\n        CertificateIdentifier: cdk.stringToCloudFormation(properties.certificateIdentifier),\n        CertificatePem: cdk.stringToCloudFormation(properties.certificatePem),\n        CertificateWallet: cdk.stringToCloudFormation(properties.certificateWallet),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnCertificatePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnCertificateProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnCertificateProps>();\n    ret.addPropertyResult('certificateIdentifier', 'CertificateIdentifier', properties.CertificateIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.CertificateIdentifier) : undefined);\n    ret.addPropertyResult('certificatePem', 'CertificatePem', properties.CertificatePem != null ? cfn_parse.FromCloudFormation.getString(properties.CertificatePem) : undefined);\n    ret.addPropertyResult('certificateWallet', 'CertificateWallet', properties.CertificateWallet != null ? cfn_parse.FromCloudFormation.getString(properties.CertificateWallet) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DMS::Certificate`\n *\n * The `AWS::DMS::Certificate` resource creates an SSL certificate that encrypts connections between AWS DMS endpoints and the replication instance.\n *\n * @cloudformationResource AWS::DMS::Certificate\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html\n */\nexport class CfnCertificate extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DMS::Certificate\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnCertificate {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnCertificatePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnCertificate(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * A customer-assigned name for the certificate. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen or contain two consecutive hyphens.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificateidentifier\n     */\n    public certificateIdentifier: string | undefined;\n\n    /**\n     * The contents of a `.pem` file, which contains an X.509 certificate.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificatepem\n     */\n    public certificatePem: string | undefined;\n\n    /**\n     * The location of an imported Oracle Wallet certificate for use with SSL. Example: `filebase64(\"${path.root}/rds-ca-2019-root.sso\")`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-certificate.html#cfn-dms-certificate-certificatewallet\n     */\n    public certificateWallet: string | undefined;\n\n    /**\n     * Create a new `AWS::DMS::Certificate`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnCertificateProps = {}) {\n        super(scope, id, { type: CfnCertificate.CFN_RESOURCE_TYPE_NAME, properties: props });\n\n        this.certificateIdentifier = props.certificateIdentifier;\n        this.certificatePem = props.certificatePem;\n        this.certificateWallet = props.certificateWallet;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnCertificate.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            certificateIdentifier: this.certificateIdentifier,\n            certificatePem: this.certificatePem,\n            certificateWallet: this.certificateWallet,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnCertificatePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnEndpoint`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html\n */\nexport interface CfnEndpointProps {\n\n    /**\n     * The type of endpoint. Valid values are `source` and `target` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-endpointtype\n     */\n    readonly endpointType: string;\n\n    /**\n     * The type of engine for the endpoint. Valid values, depending on the `EndpointType` value, include `\"mysql\"` , `\"oracle\"` , `\"postgres\"` , `\"mariadb\"` , `\"aurora\"` , `\"aurora-postgresql\"` , `\"opensearch\"` , `\"redshift\"` , `\"s3\"` , `\"db2\"` , `\"azuredb\"` , `\"sybase\"` , `\"dynamodb\"` , `\"mongodb\"` , `\"kinesis\"` , `\"kafka\"` , `\"elasticsearch\"` , `\"docdb\"` , `\"sqlserver\"` , and `\"neptune\"` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-enginename\n     */\n    readonly engineName: string;\n\n    /**\n     * The Amazon Resource Name (ARN) for the certificate.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-certificatearn\n     */\n    readonly certificateArn?: string;\n\n    /**\n     * The name of the endpoint database. For a MySQL source or target endpoint, do not specify DatabaseName. To migrate to a specific database, use this setting and `targetDbType` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-databasename\n     */\n    readonly databaseName?: string;\n\n    /**\n     * Settings in JSON format for the source DocumentDB endpoint. For more information about the available settings, see the configuration properties section in [Using DocumentDB as a Target for AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DocumentDB.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-docdbsettings\n     */\n    readonly docDbSettings?: CfnEndpoint.DocDbSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see [Using Object Mapping to Migrate Data to DynamoDB](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html#CHAP_Target.DynamoDB.ObjectMapping) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-dynamodbsettings\n     */\n    readonly dynamoDbSettings?: CfnEndpoint.DynamoDbSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the target OpenSearch endpoint. For more information about the available settings, see [Extra Connection Attributes When Using OpenSearch as a Target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration) in the *AWS Database Migration Service User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-elasticsearchsettings\n     */\n    readonly elasticsearchSettings?: CfnEndpoint.ElasticsearchSettingsProperty | cdk.IResolvable;\n\n    /**\n     * The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen, or contain two consecutive hyphens.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-endpointidentifier\n     */\n    readonly endpointIdentifier?: string;\n\n    /**\n     * Additional attributes associated with the connection. Each attribute is specified as a name-value pair associated by an equal sign (=). Multiple attributes are separated by a semicolon (;) with no additional white space. For information on the attributes available for connecting your source or target endpoint, see [Working with AWS DMS Endpoints](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Endpoints.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-extraconnectionattributes\n     */\n    readonly extraConnectionAttributes?: string;\n\n    /**\n     * Settings in JSON format for the source GCP MySQL endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-gcpmysqlsettings\n     */\n    readonly gcpMySqlSettings?: CfnEndpoint.GcpMySQLSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-ibmdb2settings\n     */\n    readonly ibmDb2Settings?: CfnEndpoint.IbmDb2SettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the target Apache Kafka endpoint. For more information about the available settings, see [Using object mapping to migrate data to a Kafka topic](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kafka.html#CHAP_Target.Kafka.ObjectMapping) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kafkasettings\n     */\n    readonly kafkaSettings?: CfnEndpoint.KafkaSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about the available settings, see [Using Amazon Kinesis Data Streams as a Target for AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kinesissettings\n     */\n    readonly kinesisSettings?: CfnEndpoint.KinesisSettingsProperty | cdk.IResolvable;\n\n    /**\n     * An AWS KMS key identifier that is used to encrypt the connection parameters for the endpoint.\n     *\n     * If you don't specify a value for the `KmsKeyId` parameter, then AWS DMS uses your default encryption key.\n     *\n     * AWS KMS creates the default encryption key for your AWS account . Your AWS account has a different default encryption key for each AWS Region .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kmskeyid\n     */\n    readonly kmsKeyId?: string;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-microsoftsqlserversettings\n     */\n    readonly microsoftSqlServerSettings?: CfnEndpoint.MicrosoftSqlServerSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-mongodbsettings\n     */\n    readonly mongoDbSettings?: CfnEndpoint.MongoDbSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see [Extra connection attributes when using MySQL as a source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MySQL.html#CHAP_Source.MySQL.ConnectionAttrib) and [Extra connection attributes when using a MySQL-compatible database as a target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.MySQL.html#CHAP_Target.MySQL.ConnectionAttrib) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-mysqlsettings\n     */\n    readonly mySqlSettings?: CfnEndpoint.MySqlSettingsProperty | cdk.IResolvable;\n\n    /**\n     * `AWS::DMS::Endpoint.NeptuneSettings`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-neptunesettings\n     */\n    readonly neptuneSettings?: CfnEndpoint.NeptuneSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see [Extra connection attributes when using Oracle as a source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.ConnectionAttrib) and [Extra connection attributes when using Oracle as a target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Oracle.html#CHAP_Target.Oracle.ConnectionAttrib) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-oraclesettings\n     */\n    readonly oracleSettings?: CfnEndpoint.OracleSettingsProperty | cdk.IResolvable;\n\n    /**\n     * The password to be used to log in to the endpoint database.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-password\n     */\n    readonly password?: string;\n\n    /**\n     * The port used by the endpoint database.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-port\n     */\n    readonly port?: number;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-postgresqlsettings\n     */\n    readonly postgreSqlSettings?: CfnEndpoint.PostgreSqlSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Settings in JSON format for the target Redis endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-redissettings\n     */\n    readonly redisSettings?: CfnEndpoint.RedisSettingsProperty | cdk.IResolvable;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-redshiftsettings\n     */\n    readonly redshiftSettings?: CfnEndpoint.RedshiftSettingsProperty | cdk.IResolvable;\n\n    /**\n     * A friendly name for the resource identifier at the end of the `EndpointArn` response parameter that is returned in the created `Endpoint` object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as `Example-App-ARN1` . For example, this value might result in the `EndpointArn` value `arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1` . If you don't specify a `ResourceIdentifier` value, AWS DMS generates a default identifier value for the end of `EndpointArn` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-resourceidentifier\n     */\n    readonly resourceIdentifier?: string;\n\n    /**\n     * Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see [Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-s3settings\n     */\n    readonly s3Settings?: CfnEndpoint.S3SettingsProperty | cdk.IResolvable;\n\n    /**\n     * The name of the server where the endpoint database resides.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-servername\n     */\n    readonly serverName?: string;\n\n    /**\n     * The Secure Sockets Layer (SSL) mode to use for the SSL connection. The default is `none` .\n     *\n     * > When `engine_name` is set to S3, then the only allowed value is `none` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-sslmode\n     */\n    readonly sslMode?: string;\n\n    /**\n     * Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see [Extra connection attributes when using SAP ASE as a source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SAP.html#CHAP_Source.SAP.ConnectionAttrib) and [Extra connection attributes when using SAP ASE as a target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SAP.html#CHAP_Target.SAP.ConnectionAttrib) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-sybasesettings\n     */\n    readonly sybaseSettings?: CfnEndpoint.SybaseSettingsProperty | cdk.IResolvable;\n\n    /**\n     * One or more tags to be assigned to the endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * The user name to be used to log in to the endpoint database.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-username\n     */\n    readonly username?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEndpointProps`\n *\n * @param properties - the TypeScript properties of a `CfnEndpointProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpointPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('certificateArn', cdk.validateString)(properties.certificateArn));\n    errors.collect(cdk.propertyValidator('databaseName', cdk.validateString)(properties.databaseName));\n    errors.collect(cdk.propertyValidator('docDbSettings', CfnEndpoint_DocDbSettingsPropertyValidator)(properties.docDbSettings));\n    errors.collect(cdk.propertyValidator('dynamoDbSettings', CfnEndpoint_DynamoDbSettingsPropertyValidator)(properties.dynamoDbSettings));\n    errors.collect(cdk.propertyValidator('elasticsearchSettings', CfnEndpoint_ElasticsearchSettingsPropertyValidator)(properties.elasticsearchSettings));\n    errors.collect(cdk.propertyValidator('endpointIdentifier', cdk.validateString)(properties.endpointIdentifier));\n    errors.collect(cdk.propertyValidator('endpointType', cdk.requiredValidator)(properties.endpointType));\n    errors.collect(cdk.propertyValidator('endpointType', cdk.validateString)(properties.endpointType));\n    errors.collect(cdk.propertyValidator('engineName', cdk.requiredValidator)(properties.engineName));\n    errors.collect(cdk.propertyValidator('engineName', cdk.validateString)(properties.engineName));\n    errors.collect(cdk.propertyValidator('extraConnectionAttributes', cdk.validateString)(properties.extraConnectionAttributes));\n    errors.collect(cdk.propertyValidator('gcpMySqlSettings', CfnEndpoint_GcpMySQLSettingsPropertyValidator)(properties.gcpMySqlSettings));\n    errors.collect(cdk.propertyValidator('ibmDb2Settings', CfnEndpoint_IbmDb2SettingsPropertyValidator)(properties.ibmDb2Settings));\n    errors.collect(cdk.propertyValidator('kafkaSettings', CfnEndpoint_KafkaSettingsPropertyValidator)(properties.kafkaSettings));\n    errors.collect(cdk.propertyValidator('kinesisSettings', CfnEndpoint_KinesisSettingsPropertyValidator)(properties.kinesisSettings));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('microsoftSqlServerSettings', CfnEndpoint_MicrosoftSqlServerSettingsPropertyValidator)(properties.microsoftSqlServerSettings));\n    errors.collect(cdk.propertyValidator('mongoDbSettings', CfnEndpoint_MongoDbSettingsPropertyValidator)(properties.mongoDbSettings));\n    errors.collect(cdk.propertyValidator('mySqlSettings', CfnEndpoint_MySqlSettingsPropertyValidator)(properties.mySqlSettings));\n    errors.collect(cdk.propertyValidator('neptuneSettings', CfnEndpoint_NeptuneSettingsPropertyValidator)(properties.neptuneSettings));\n    errors.collect(cdk.propertyValidator('oracleSettings', CfnEndpoint_OracleSettingsPropertyValidator)(properties.oracleSettings));\n    errors.collect(cdk.propertyValidator('password', cdk.validateString)(properties.password));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('postgreSqlSettings', CfnEndpoint_PostgreSqlSettingsPropertyValidator)(properties.postgreSqlSettings));\n    errors.collect(cdk.propertyValidator('redisSettings', CfnEndpoint_RedisSettingsPropertyValidator)(properties.redisSettings));\n    errors.collect(cdk.propertyValidator('redshiftSettings', CfnEndpoint_RedshiftSettingsPropertyValidator)(properties.redshiftSettings));\n    errors.collect(cdk.propertyValidator('resourceIdentifier', cdk.validateString)(properties.resourceIdentifier));\n    errors.collect(cdk.propertyValidator('s3Settings', CfnEndpoint_S3SettingsPropertyValidator)(properties.s3Settings));\n    errors.collect(cdk.propertyValidator('serverName', cdk.validateString)(properties.serverName));\n    errors.collect(cdk.propertyValidator('sslMode', cdk.validateString)(properties.sslMode));\n    errors.collect(cdk.propertyValidator('sybaseSettings', CfnEndpoint_SybaseSettingsPropertyValidator)(properties.sybaseSettings));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('username', cdk.validateString)(properties.username));\n    return errors.wrap('supplied properties not correct for \"CfnEndpointProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint` resource\n *\n * @param properties - the TypeScript properties of a `CfnEndpointProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpointPropsValidator(properties).assertSuccess();\n    return {\n        EndpointType: cdk.stringToCloudFormation(properties.endpointType),\n        EngineName: cdk.stringToCloudFormation(properties.engineName),\n        CertificateArn: cdk.stringToCloudFormation(properties.certificateArn),\n        DatabaseName: cdk.stringToCloudFormation(properties.databaseName),\n        DocDbSettings: cfnEndpointDocDbSettingsPropertyToCloudFormation(properties.docDbSettings),\n        DynamoDbSettings: cfnEndpointDynamoDbSettingsPropertyToCloudFormation(properties.dynamoDbSettings),\n        ElasticsearchSettings: cfnEndpointElasticsearchSettingsPropertyToCloudFormation(properties.elasticsearchSettings),\n        EndpointIdentifier: cdk.stringToCloudFormation(properties.endpointIdentifier),\n        ExtraConnectionAttributes: cdk.stringToCloudFormation(properties.extraConnectionAttributes),\n        GcpMySQLSettings: cfnEndpointGcpMySQLSettingsPropertyToCloudFormation(properties.gcpMySqlSettings),\n        IbmDb2Settings: cfnEndpointIbmDb2SettingsPropertyToCloudFormation(properties.ibmDb2Settings),\n        KafkaSettings: cfnEndpointKafkaSettingsPropertyToCloudFormation(properties.kafkaSettings),\n        KinesisSettings: cfnEndpointKinesisSettingsPropertyToCloudFormation(properties.kinesisSettings),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        MicrosoftSqlServerSettings: cfnEndpointMicrosoftSqlServerSettingsPropertyToCloudFormation(properties.microsoftSqlServerSettings),\n        MongoDbSettings: cfnEndpointMongoDbSettingsPropertyToCloudFormation(properties.mongoDbSettings),\n        MySqlSettings: cfnEndpointMySqlSettingsPropertyToCloudFormation(properties.mySqlSettings),\n        NeptuneSettings: cfnEndpointNeptuneSettingsPropertyToCloudFormation(properties.neptuneSettings),\n        OracleSettings: cfnEndpointOracleSettingsPropertyToCloudFormation(properties.oracleSettings),\n        Password: cdk.stringToCloudFormation(properties.password),\n        Port: cdk.numberToCloudFormation(properties.port),\n        PostgreSqlSettings: cfnEndpointPostgreSqlSettingsPropertyToCloudFormation(properties.postgreSqlSettings),\n        RedisSettings: cfnEndpointRedisSettingsPropertyToCloudFormation(properties.redisSettings),\n        RedshiftSettings: cfnEndpointRedshiftSettingsPropertyToCloudFormation(properties.redshiftSettings),\n        ResourceIdentifier: cdk.stringToCloudFormation(properties.resourceIdentifier),\n        S3Settings: cfnEndpointS3SettingsPropertyToCloudFormation(properties.s3Settings),\n        ServerName: cdk.stringToCloudFormation(properties.serverName),\n        SslMode: cdk.stringToCloudFormation(properties.sslMode),\n        SybaseSettings: cfnEndpointSybaseSettingsPropertyToCloudFormation(properties.sybaseSettings),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        Username: cdk.stringToCloudFormation(properties.username),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpointProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpointProps>();\n    ret.addPropertyResult('endpointType', 'EndpointType', cfn_parse.FromCloudFormation.getString(properties.EndpointType));\n    ret.addPropertyResult('engineName', 'EngineName', cfn_parse.FromCloudFormation.getString(properties.EngineName));\n    ret.addPropertyResult('certificateArn', 'CertificateArn', properties.CertificateArn != null ? cfn_parse.FromCloudFormation.getString(properties.CertificateArn) : undefined);\n    ret.addPropertyResult('databaseName', 'DatabaseName', properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined);\n    ret.addPropertyResult('docDbSettings', 'DocDbSettings', properties.DocDbSettings != null ? CfnEndpointDocDbSettingsPropertyFromCloudFormation(properties.DocDbSettings) : undefined);\n    ret.addPropertyResult('dynamoDbSettings', 'DynamoDbSettings', properties.DynamoDbSettings != null ? CfnEndpointDynamoDbSettingsPropertyFromCloudFormation(properties.DynamoDbSettings) : undefined);\n    ret.addPropertyResult('elasticsearchSettings', 'ElasticsearchSettings', properties.ElasticsearchSettings != null ? CfnEndpointElasticsearchSettingsPropertyFromCloudFormation(properties.ElasticsearchSettings) : undefined);\n    ret.addPropertyResult('endpointIdentifier', 'EndpointIdentifier', properties.EndpointIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.EndpointIdentifier) : undefined);\n    ret.addPropertyResult('extraConnectionAttributes', 'ExtraConnectionAttributes', properties.ExtraConnectionAttributes != null ? cfn_parse.FromCloudFormation.getString(properties.ExtraConnectionAttributes) : undefined);\n    ret.addPropertyResult('gcpMySqlSettings', 'GcpMySQLSettings', properties.GcpMySQLSettings != null ? CfnEndpointGcpMySQLSettingsPropertyFromCloudFormation(properties.GcpMySQLSettings) : undefined);\n    ret.addPropertyResult('ibmDb2Settings', 'IbmDb2Settings', properties.IbmDb2Settings != null ? CfnEndpointIbmDb2SettingsPropertyFromCloudFormation(properties.IbmDb2Settings) : undefined);\n    ret.addPropertyResult('kafkaSettings', 'KafkaSettings', properties.KafkaSettings != null ? CfnEndpointKafkaSettingsPropertyFromCloudFormation(properties.KafkaSettings) : undefined);\n    ret.addPropertyResult('kinesisSettings', 'KinesisSettings', properties.KinesisSettings != null ? CfnEndpointKinesisSettingsPropertyFromCloudFormation(properties.KinesisSettings) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('microsoftSqlServerSettings', 'MicrosoftSqlServerSettings', properties.MicrosoftSqlServerSettings != null ? CfnEndpointMicrosoftSqlServerSettingsPropertyFromCloudFormation(properties.MicrosoftSqlServerSettings) : undefined);\n    ret.addPropertyResult('mongoDbSettings', 'MongoDbSettings', properties.MongoDbSettings != null ? CfnEndpointMongoDbSettingsPropertyFromCloudFormation(properties.MongoDbSettings) : undefined);\n    ret.addPropertyResult('mySqlSettings', 'MySqlSettings', properties.MySqlSettings != null ? CfnEndpointMySqlSettingsPropertyFromCloudFormation(properties.MySqlSettings) : undefined);\n    ret.addPropertyResult('neptuneSettings', 'NeptuneSettings', properties.NeptuneSettings != null ? CfnEndpointNeptuneSettingsPropertyFromCloudFormation(properties.NeptuneSettings) : undefined);\n    ret.addPropertyResult('oracleSettings', 'OracleSettings', properties.OracleSettings != null ? CfnEndpointOracleSettingsPropertyFromCloudFormation(properties.OracleSettings) : undefined);\n    ret.addPropertyResult('password', 'Password', properties.Password != null ? cfn_parse.FromCloudFormation.getString(properties.Password) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('postgreSqlSettings', 'PostgreSqlSettings', properties.PostgreSqlSettings != null ? CfnEndpointPostgreSqlSettingsPropertyFromCloudFormation(properties.PostgreSqlSettings) : undefined);\n    ret.addPropertyResult('redisSettings', 'RedisSettings', properties.RedisSettings != null ? CfnEndpointRedisSettingsPropertyFromCloudFormation(properties.RedisSettings) : undefined);\n    ret.addPropertyResult('redshiftSettings', 'RedshiftSettings', properties.RedshiftSettings != null ? CfnEndpointRedshiftSettingsPropertyFromCloudFormation(properties.RedshiftSettings) : undefined);\n    ret.addPropertyResult('resourceIdentifier', 'ResourceIdentifier', properties.ResourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier) : undefined);\n    ret.addPropertyResult('s3Settings', 'S3Settings', properties.S3Settings != null ? CfnEndpointS3SettingsPropertyFromCloudFormation(properties.S3Settings) : undefined);\n    ret.addPropertyResult('serverName', 'ServerName', properties.ServerName != null ? cfn_parse.FromCloudFormation.getString(properties.ServerName) : undefined);\n    ret.addPropertyResult('sslMode', 'SslMode', properties.SslMode != null ? cfn_parse.FromCloudFormation.getString(properties.SslMode) : undefined);\n    ret.addPropertyResult('sybaseSettings', 'SybaseSettings', properties.SybaseSettings != null ? CfnEndpointSybaseSettingsPropertyFromCloudFormation(properties.SybaseSettings) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('username', 'Username', properties.Username != null ? cfn_parse.FromCloudFormation.getString(properties.Username) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DMS::Endpoint`\n *\n * The `AWS::DMS::Endpoint` resource creates an AWS DMS endpoint.\n *\n * Currently, the only endpoint setting types that AWS CloudFormation supports are *DynamoDBSettings* , *ElasticSearchSettings* , and *NeptuneSettings* .\n *\n * @cloudformationResource AWS::DMS::Endpoint\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html\n */\nexport class CfnEndpoint extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DMS::Endpoint\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEndpoint {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEndpointPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEndpoint(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * A value that can be used for cross-account validation.\n     * @cloudformationAttribute ExternalId\n     */\n    public readonly attrExternalId: string;\n\n    /**\n     * The type of endpoint. Valid values are `source` and `target` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-endpointtype\n     */\n    public endpointType: string;\n\n    /**\n     * The type of engine for the endpoint. Valid values, depending on the `EndpointType` value, include `\"mysql\"` , `\"oracle\"` , `\"postgres\"` , `\"mariadb\"` , `\"aurora\"` , `\"aurora-postgresql\"` , `\"opensearch\"` , `\"redshift\"` , `\"s3\"` , `\"db2\"` , `\"azuredb\"` , `\"sybase\"` , `\"dynamodb\"` , `\"mongodb\"` , `\"kinesis\"` , `\"kafka\"` , `\"elasticsearch\"` , `\"docdb\"` , `\"sqlserver\"` , and `\"neptune\"` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-enginename\n     */\n    public engineName: string;\n\n    /**\n     * The Amazon Resource Name (ARN) for the certificate.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-certificatearn\n     */\n    public certificateArn: string | undefined;\n\n    /**\n     * The name of the endpoint database. For a MySQL source or target endpoint, do not specify DatabaseName. To migrate to a specific database, use this setting and `targetDbType` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-databasename\n     */\n    public databaseName: string | undefined;\n\n    /**\n     * Settings in JSON format for the source DocumentDB endpoint. For more information about the available settings, see the configuration properties section in [Using DocumentDB as a Target for AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.DocumentDB.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-docdbsettings\n     */\n    public docDbSettings: CfnEndpoint.DocDbSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the target Amazon DynamoDB endpoint. For information about other available settings, see [Using Object Mapping to Migrate Data to DynamoDB](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.DynamoDB.html#CHAP_Target.DynamoDB.ObjectMapping) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-dynamodbsettings\n     */\n    public dynamoDbSettings: CfnEndpoint.DynamoDbSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the target OpenSearch endpoint. For more information about the available settings, see [Extra Connection Attributes When Using OpenSearch as a Target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Elasticsearch.html#CHAP_Target.Elasticsearch.Configuration) in the *AWS Database Migration Service User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-elasticsearchsettings\n     */\n    public elasticsearchSettings: CfnEndpoint.ElasticsearchSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The database endpoint identifier. Identifiers must begin with a letter and must contain only ASCII letters, digits, and hyphens. They can't end with a hyphen, or contain two consecutive hyphens.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-endpointidentifier\n     */\n    public endpointIdentifier: string | undefined;\n\n    /**\n     * Additional attributes associated with the connection. Each attribute is specified as a name-value pair associated by an equal sign (=). Multiple attributes are separated by a semicolon (;) with no additional white space. For information on the attributes available for connecting your source or target endpoint, see [Working with AWS DMS Endpoints](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Endpoints.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-extraconnectionattributes\n     */\n    public extraConnectionAttributes: string | undefined;\n\n    /**\n     * Settings in JSON format for the source GCP MySQL endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-gcpmysqlsettings\n     */\n    public gcpMySqlSettings: CfnEndpoint.GcpMySQLSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-ibmdb2settings\n     */\n    public ibmDb2Settings: CfnEndpoint.IbmDb2SettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the target Apache Kafka endpoint. For more information about the available settings, see [Using object mapping to migrate data to a Kafka topic](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kafka.html#CHAP_Target.Kafka.ObjectMapping) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kafkasettings\n     */\n    public kafkaSettings: CfnEndpoint.KafkaSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the target endpoint for Amazon Kinesis Data Streams. For more information about the available settings, see [Using Amazon Kinesis Data Streams as a Target for AWS Database Migration Service](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Kinesis.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kinesissettings\n     */\n    public kinesisSettings: CfnEndpoint.KinesisSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * An AWS KMS key identifier that is used to encrypt the connection parameters for the endpoint.\n     *\n     * If you don't specify a value for the `KmsKeyId` parameter, then AWS DMS uses your default encryption key.\n     *\n     * AWS KMS creates the default encryption key for your AWS account . Your AWS account has a different default encryption key for each AWS Region .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-kmskeyid\n     */\n    public kmsKeyId: string | undefined;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-microsoftsqlserversettings\n     */\n    public microsoftSqlServerSettings: CfnEndpoint.MicrosoftSqlServerSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-mongodbsettings\n     */\n    public mongoDbSettings: CfnEndpoint.MongoDbSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the source and target MySQL endpoint. For information about other available settings, see [Extra connection attributes when using MySQL as a source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.MySQL.html#CHAP_Source.MySQL.ConnectionAttrib) and [Extra connection attributes when using a MySQL-compatible database as a target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.MySQL.html#CHAP_Target.MySQL.ConnectionAttrib) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-mysqlsettings\n     */\n    public mySqlSettings: CfnEndpoint.MySqlSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * `AWS::DMS::Endpoint.NeptuneSettings`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-neptunesettings\n     */\n    public neptuneSettings: CfnEndpoint.NeptuneSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the source and target Oracle endpoint. For information about other available settings, see [Extra connection attributes when using Oracle as a source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.Oracle.html#CHAP_Source.Oracle.ConnectionAttrib) and [Extra connection attributes when using Oracle as a target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Oracle.html#CHAP_Target.Oracle.ConnectionAttrib) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-oraclesettings\n     */\n    public oracleSettings: CfnEndpoint.OracleSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The password to be used to log in to the endpoint database.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-password\n     */\n    public password: string | undefined;\n\n    /**\n     * The port used by the endpoint database.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-port\n     */\n    public port: number | undefined;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-postgresqlsettings\n     */\n    public postgreSqlSettings: CfnEndpoint.PostgreSqlSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Settings in JSON format for the target Redis endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-redissettings\n     */\n    public redisSettings: CfnEndpoint.RedisSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-redshiftsettings\n     */\n    public redshiftSettings: CfnEndpoint.RedshiftSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * A friendly name for the resource identifier at the end of the `EndpointArn` response parameter that is returned in the created `Endpoint` object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as `Example-App-ARN1` . For example, this value might result in the `EndpointArn` value `arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1` . If you don't specify a `ResourceIdentifier` value, AWS DMS generates a default identifier value for the end of `EndpointArn` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-resourceidentifier\n     */\n    public resourceIdentifier: string | undefined;\n\n    /**\n     * Settings in JSON format for the target Amazon S3 endpoint. For more information about the available settings, see [Extra Connection Attributes When Using Amazon S3 as a Target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-s3settings\n     */\n    public s3Settings: CfnEndpoint.S3SettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * The name of the server where the endpoint database resides.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-servername\n     */\n    public serverName: string | undefined;\n\n    /**\n     * The Secure Sockets Layer (SSL) mode to use for the SSL connection. The default is `none` .\n     *\n     * > When `engine_name` is set to S3, then the only allowed value is `none` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-sslmode\n     */\n    public sslMode: string | undefined;\n\n    /**\n     * Settings in JSON format for the source and target SAP ASE endpoint. For information about other available settings, see [Extra connection attributes when using SAP ASE as a source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.SAP.html#CHAP_Source.SAP.ConnectionAttrib) and [Extra connection attributes when using SAP ASE as a target for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.SAP.html#CHAP_Target.SAP.ConnectionAttrib) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-sybasesettings\n     */\n    public sybaseSettings: CfnEndpoint.SybaseSettingsProperty | cdk.IResolvable | undefined;\n\n    /**\n     * One or more tags to be assigned to the endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * The user name to be used to log in to the endpoint database.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-endpoint.html#cfn-dms-endpoint-username\n     */\n    public username: string | undefined;\n\n    /**\n     * Create a new `AWS::DMS::Endpoint`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEndpointProps) {\n        super(scope, id, { type: CfnEndpoint.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'endpointType', this);\n        cdk.requireProperty(props, 'engineName', this);\n        this.attrExternalId = cdk.Token.asString(this.getAtt('ExternalId'));\n\n        this.endpointType = props.endpointType;\n        this.engineName = props.engineName;\n        this.certificateArn = props.certificateArn;\n        this.databaseName = props.databaseName;\n        this.docDbSettings = props.docDbSettings;\n        this.dynamoDbSettings = props.dynamoDbSettings;\n        this.elasticsearchSettings = props.elasticsearchSettings;\n        this.endpointIdentifier = props.endpointIdentifier;\n        this.extraConnectionAttributes = props.extraConnectionAttributes;\n        this.gcpMySqlSettings = props.gcpMySqlSettings;\n        this.ibmDb2Settings = props.ibmDb2Settings;\n        this.kafkaSettings = props.kafkaSettings;\n        this.kinesisSettings = props.kinesisSettings;\n        this.kmsKeyId = props.kmsKeyId;\n        this.microsoftSqlServerSettings = props.microsoftSqlServerSettings;\n        this.mongoDbSettings = props.mongoDbSettings;\n        this.mySqlSettings = props.mySqlSettings;\n        this.neptuneSettings = props.neptuneSettings;\n        this.oracleSettings = props.oracleSettings;\n        this.password = props.password;\n        this.port = props.port;\n        this.postgreSqlSettings = props.postgreSqlSettings;\n        this.redisSettings = props.redisSettings;\n        this.redshiftSettings = props.redshiftSettings;\n        this.resourceIdentifier = props.resourceIdentifier;\n        this.s3Settings = props.s3Settings;\n        this.serverName = props.serverName;\n        this.sslMode = props.sslMode;\n        this.sybaseSettings = props.sybaseSettings;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::DMS::Endpoint\", props.tags, { tagPropertyName: 'tags' });\n        this.username = props.username;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEndpoint.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            endpointType: this.endpointType,\n            engineName: this.engineName,\n            certificateArn: this.certificateArn,\n            databaseName: this.databaseName,\n            docDbSettings: this.docDbSettings,\n            dynamoDbSettings: this.dynamoDbSettings,\n            elasticsearchSettings: this.elasticsearchSettings,\n            endpointIdentifier: this.endpointIdentifier,\n            extraConnectionAttributes: this.extraConnectionAttributes,\n            gcpMySqlSettings: this.gcpMySqlSettings,\n            ibmDb2Settings: this.ibmDb2Settings,\n            kafkaSettings: this.kafkaSettings,\n            kinesisSettings: this.kinesisSettings,\n            kmsKeyId: this.kmsKeyId,\n            microsoftSqlServerSettings: this.microsoftSqlServerSettings,\n            mongoDbSettings: this.mongoDbSettings,\n            mySqlSettings: this.mySqlSettings,\n            neptuneSettings: this.neptuneSettings,\n            oracleSettings: this.oracleSettings,\n            password: this.password,\n            port: this.port,\n            postgreSqlSettings: this.postgreSqlSettings,\n            redisSettings: this.redisSettings,\n            redshiftSettings: this.redshiftSettings,\n            resourceIdentifier: this.resourceIdentifier,\n            s3Settings: this.s3Settings,\n            serverName: this.serverName,\n            sslMode: this.sslMode,\n            sybaseSettings: this.sybaseSettings,\n            tags: this.tags.renderTags(),\n            username: this.username,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEndpointPropsToCloudFormation(props);\n    }\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-docdbsettings.html\n     */\n    export interface DocDbSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-docdbsettings.html#cfn-dms-endpoint-docdbsettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-docdbsettings.html#cfn-dms-endpoint-docdbsettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DocDbSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `DocDbSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_DocDbSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"DocDbSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.DocDbSettings` resource\n *\n * @param properties - the TypeScript properties of a `DocDbSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.DocDbSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointDocDbSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_DocDbSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointDocDbSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.DocDbSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.DocDbSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Provides the Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role used to define an Amazon DynamoDB target endpoint.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-dynamodbsettings.html\n     */\n    export interface DynamoDbSettingsProperty {\n        /**\n         * The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the `iam:PassRole` action.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-dynamodbsettings.html#cfn-dms-endpoint-dynamodbsettings-serviceaccessrolearn\n         */\n        readonly serviceAccessRoleArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `DynamoDbSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `DynamoDbSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_DynamoDbSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('serviceAccessRoleArn', cdk.validateString)(properties.serviceAccessRoleArn));\n    return errors.wrap('supplied properties not correct for \"DynamoDbSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.DynamoDbSettings` resource\n *\n * @param properties - the TypeScript properties of a `DynamoDbSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.DynamoDbSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointDynamoDbSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_DynamoDbSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        ServiceAccessRoleArn: cdk.stringToCloudFormation(properties.serviceAccessRoleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointDynamoDbSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.DynamoDbSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.DynamoDbSettingsProperty>();\n    ret.addPropertyResult('serviceAccessRoleArn', 'ServiceAccessRoleArn', properties.ServiceAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Provides information that defines an OpenSearch endpoint.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-elasticsearchsettings.html\n     */\n    export interface ElasticsearchSettingsProperty {\n        /**\n         * The endpoint for the OpenSearch cluster. AWS DMS uses HTTPS if a transport protocol (http/https) is not specified.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-elasticsearchsettings.html#cfn-dms-endpoint-elasticsearchsettings-endpointuri\n         */\n        readonly endpointUri?: string;\n        /**\n         * The maximum number of seconds for which DMS retries failed API requests to the OpenSearch cluster.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-elasticsearchsettings.html#cfn-dms-endpoint-elasticsearchsettings-errorretryduration\n         */\n        readonly errorRetryDuration?: number;\n        /**\n         * The maximum percentage of records that can fail to be written before a full load operation stops.\n         *\n         * To avoid early failure, this counter is only effective after 1000 records are transferred. OpenSearch also has the concept of error monitoring during the last 10 minutes of an Observation Window. If transfer of all records fail in the last 10 minutes, the full load operation stops.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-elasticsearchsettings.html#cfn-dms-endpoint-elasticsearchsettings-fullloaderrorpercentage\n         */\n        readonly fullLoadErrorPercentage?: number;\n        /**\n         * The Amazon Resource Name (ARN) used by the service to access the IAM role. The role must allow the `iam:PassRole` action.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-elasticsearchsettings.html#cfn-dms-endpoint-elasticsearchsettings-serviceaccessrolearn\n         */\n        readonly serviceAccessRoleArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `ElasticsearchSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `ElasticsearchSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_ElasticsearchSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('endpointUri', cdk.validateString)(properties.endpointUri));\n    errors.collect(cdk.propertyValidator('errorRetryDuration', cdk.validateNumber)(properties.errorRetryDuration));\n    errors.collect(cdk.propertyValidator('fullLoadErrorPercentage', cdk.validateNumber)(properties.fullLoadErrorPercentage));\n    errors.collect(cdk.propertyValidator('serviceAccessRoleArn', cdk.validateString)(properties.serviceAccessRoleArn));\n    return errors.wrap('supplied properties not correct for \"ElasticsearchSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.ElasticsearchSettings` resource\n *\n * @param properties - the TypeScript properties of a `ElasticsearchSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.ElasticsearchSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointElasticsearchSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_ElasticsearchSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        EndpointUri: cdk.stringToCloudFormation(properties.endpointUri),\n        ErrorRetryDuration: cdk.numberToCloudFormation(properties.errorRetryDuration),\n        FullLoadErrorPercentage: cdk.numberToCloudFormation(properties.fullLoadErrorPercentage),\n        ServiceAccessRoleArn: cdk.stringToCloudFormation(properties.serviceAccessRoleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointElasticsearchSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.ElasticsearchSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.ElasticsearchSettingsProperty>();\n    ret.addPropertyResult('endpointUri', 'EndpointUri', properties.EndpointUri != null ? cfn_parse.FromCloudFormation.getString(properties.EndpointUri) : undefined);\n    ret.addPropertyResult('errorRetryDuration', 'ErrorRetryDuration', properties.ErrorRetryDuration != null ? cfn_parse.FromCloudFormation.getNumber(properties.ErrorRetryDuration) : undefined);\n    ret.addPropertyResult('fullLoadErrorPercentage', 'FullLoadErrorPercentage', properties.FullLoadErrorPercentage != null ? cfn_parse.FromCloudFormation.getNumber(properties.FullLoadErrorPercentage) : undefined);\n    ret.addPropertyResult('serviceAccessRoleArn', 'ServiceAccessRoleArn', properties.ServiceAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Settings in JSON format for the source GCP MySQL endpoint.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html\n     */\n    export interface GcpMySQLSettingsProperty {\n        /**\n         * Specifies a script to run immediately after AWS DMS connects to the endpoint. The migration task continues running regardless if the SQL statement succeeds or fails.\n         *\n         * For this parameter, provide the code of the script itself, not the name of a file containing the script.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-afterconnectscript\n         */\n        readonly afterConnectScript?: string;\n        /**\n         * Adjusts the behavior of AWS DMS when migrating from an SQL Server source database that is hosted as part of an Always On availability group cluster. If you need AWS DMS to poll all the nodes in the Always On cluster for transaction backups, set this attribute to `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-cleansourcemetadataonmismatch\n         */\n        readonly cleanSourceMetadataOnMismatch?: boolean | cdk.IResolvable;\n        /**\n         * Database name for the endpoint. For a MySQL source or target endpoint, don't explicitly specify the database using the `DatabaseName` request parameter on either the `CreateEndpoint` or `ModifyEndpoint` API call. Specifying `DatabaseName` when you create or modify a MySQL endpoint replicates all the task tables to this single database. For MySQL endpoints, you specify the database only when you specify the schema in the table-mapping rules of the AWS DMS task.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-databasename\n         */\n        readonly databaseName?: string;\n        /**\n         * Specifies how often to check the binary log for new changes/events when the database is idle. The default is five seconds.\n         *\n         * Example: `eventsPollInterval=5;`\n         *\n         * In the example, AWS DMS checks for changes in the binary logs every five seconds.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-eventspollinterval\n         */\n        readonly eventsPollInterval?: number;\n        /**\n         * Specifies the maximum size (in KB) of any .csv file used to transfer data to a MySQL-compatible database.\n         *\n         * Example: `maxFileSize=512`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-maxfilesize\n         */\n        readonly maxFileSize?: number;\n        /**\n         * Improves performance when loading data into the MySQL-compatible target database. Specifies how many threads to use to load the data into the MySQL-compatible target database. Setting a large number of threads can have an adverse effect on database performance, because a separate connection is required for each thread. The default is one.\n         *\n         * Example: `parallelLoadThreads=1`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-parallelloadthreads\n         */\n        readonly parallelLoadThreads?: number;\n        /**\n         * Endpoint connection password.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-password\n         */\n        readonly password?: string;\n        /**\n         * `CfnEndpoint.GcpMySQLSettingsProperty.Port`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-port\n         */\n        readonly port?: number;\n        /**\n         * The full Amazon Resource Name (ARN) of the IAM role that specifies AWS DMS as the trusted entity and grants the required permissions to access the value in `SecretsManagerSecret.` The role must allow the `iam:PassRole` action. `SecretsManagerSecret` has the value of the AWS Secrets Manager secret that allows access to the MySQL endpoint.\n         *\n         * > You can specify one of two sets of values for these permissions. You can specify the values for this setting and `SecretsManagerSecretId` . Or you can specify clear-text values for `UserName` , `Password` , `ServerName` , and `Port` . You can't specify both. For more information on creating this `SecretsManagerSecret` and the `SecretsManagerAccessRoleArn` and `SecretsManagerSecretId` required to access it, see [Using secrets to access AWS Database Migration Service resources](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.html#security-iam-secretsmanager) in the AWS Database Migration Service User Guide.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * The full ARN, partial ARN, or friendly name of the `SecretsManagerSecret` that contains the MySQL endpoint connection details.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n        /**\n         * Endpoint TCP port.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-servername\n         */\n        readonly serverName?: string;\n        /**\n         * Specifies the time zone for the source MySQL database.\n         *\n         * Example: `serverTimezone=US/Pacific;`\n         *\n         * Note: Do not enclose time zones in single quotes.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-servertimezone\n         */\n        readonly serverTimezone?: string;\n        /**\n         * Endpoint connection user name.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-gcpmysqlsettings.html#cfn-dms-endpoint-gcpmysqlsettings-username\n         */\n        readonly username?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `GcpMySQLSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `GcpMySQLSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_GcpMySQLSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('afterConnectScript', cdk.validateString)(properties.afterConnectScript));\n    errors.collect(cdk.propertyValidator('cleanSourceMetadataOnMismatch', cdk.validateBoolean)(properties.cleanSourceMetadataOnMismatch));\n    errors.collect(cdk.propertyValidator('databaseName', cdk.validateString)(properties.databaseName));\n    errors.collect(cdk.propertyValidator('eventsPollInterval', cdk.validateNumber)(properties.eventsPollInterval));\n    errors.collect(cdk.propertyValidator('maxFileSize', cdk.validateNumber)(properties.maxFileSize));\n    errors.collect(cdk.propertyValidator('parallelLoadThreads', cdk.validateNumber)(properties.parallelLoadThreads));\n    errors.collect(cdk.propertyValidator('password', cdk.validateString)(properties.password));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    errors.collect(cdk.propertyValidator('serverName', cdk.validateString)(properties.serverName));\n    errors.collect(cdk.propertyValidator('serverTimezone', cdk.validateString)(properties.serverTimezone));\n    errors.collect(cdk.propertyValidator('username', cdk.validateString)(properties.username));\n    return errors.wrap('supplied properties not correct for \"GcpMySQLSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.GcpMySQLSettings` resource\n *\n * @param properties - the TypeScript properties of a `GcpMySQLSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.GcpMySQLSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointGcpMySQLSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_GcpMySQLSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        AfterConnectScript: cdk.stringToCloudFormation(properties.afterConnectScript),\n        CleanSourceMetadataOnMismatch: cdk.booleanToCloudFormation(properties.cleanSourceMetadataOnMismatch),\n        DatabaseName: cdk.stringToCloudFormation(properties.databaseName),\n        EventsPollInterval: cdk.numberToCloudFormation(properties.eventsPollInterval),\n        MaxFileSize: cdk.numberToCloudFormation(properties.maxFileSize),\n        ParallelLoadThreads: cdk.numberToCloudFormation(properties.parallelLoadThreads),\n        Password: cdk.stringToCloudFormation(properties.password),\n        Port: cdk.numberToCloudFormation(properties.port),\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n        ServerName: cdk.stringToCloudFormation(properties.serverName),\n        ServerTimezone: cdk.stringToCloudFormation(properties.serverTimezone),\n        Username: cdk.stringToCloudFormation(properties.username),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointGcpMySQLSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.GcpMySQLSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.GcpMySQLSettingsProperty>();\n    ret.addPropertyResult('afterConnectScript', 'AfterConnectScript', properties.AfterConnectScript != null ? cfn_parse.FromCloudFormation.getString(properties.AfterConnectScript) : undefined);\n    ret.addPropertyResult('cleanSourceMetadataOnMismatch', 'CleanSourceMetadataOnMismatch', properties.CleanSourceMetadataOnMismatch != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CleanSourceMetadataOnMismatch) : undefined);\n    ret.addPropertyResult('databaseName', 'DatabaseName', properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined);\n    ret.addPropertyResult('eventsPollInterval', 'EventsPollInterval', properties.EventsPollInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.EventsPollInterval) : undefined);\n    ret.addPropertyResult('maxFileSize', 'MaxFileSize', properties.MaxFileSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize) : undefined);\n    ret.addPropertyResult('parallelLoadThreads', 'ParallelLoadThreads', properties.ParallelLoadThreads != null ? cfn_parse.FromCloudFormation.getNumber(properties.ParallelLoadThreads) : undefined);\n    ret.addPropertyResult('password', 'Password', properties.Password != null ? cfn_parse.FromCloudFormation.getString(properties.Password) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addPropertyResult('serverName', 'ServerName', properties.ServerName != null ? cfn_parse.FromCloudFormation.getString(properties.ServerName) : undefined);\n    ret.addPropertyResult('serverTimezone', 'ServerTimezone', properties.ServerTimezone != null ? cfn_parse.FromCloudFormation.getString(properties.ServerTimezone) : undefined);\n    ret.addPropertyResult('username', 'Username', properties.Username != null ? cfn_parse.FromCloudFormation.getString(properties.Username) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-ibmdb2settings.html\n     */\n    export interface IbmDb2SettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-ibmdb2settings.html#cfn-dms-endpoint-ibmdb2settings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-ibmdb2settings.html#cfn-dms-endpoint-ibmdb2settings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `IbmDb2SettingsProperty`\n *\n * @param properties - the TypeScript properties of a `IbmDb2SettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_IbmDb2SettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"IbmDb2SettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.IbmDb2Settings` resource\n *\n * @param properties - the TypeScript properties of a `IbmDb2SettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.IbmDb2Settings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointIbmDb2SettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_IbmDb2SettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointIbmDb2SettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.IbmDb2SettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.IbmDb2SettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html\n     */\n    export interface KafkaSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-broker\n         */\n        readonly broker?: string;\n        /**\n         * Shows detailed control information for table definition, column definition, and table and column changes in the Kafka message output. The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-includecontroldetails\n         */\n        readonly includeControlDetails?: boolean | cdk.IResolvable;\n        /**\n         * Include NULL and empty columns for records migrated to the endpoint. The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-includenullandempty\n         */\n        readonly includeNullAndEmpty?: boolean | cdk.IResolvable;\n        /**\n         * Includes any data definition language (DDL) operations that change the table in the control data, such as `rename-table` , `drop-table` , `add-column` , `drop-column` , and `rename-column` . The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-includetablealteroperations\n         */\n        readonly includeTableAlterOperations?: boolean | cdk.IResolvable;\n        /**\n         * Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for `transaction_id` , previous `transaction_id` , and `transaction_record_id` (the record offset within a transaction). The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-includetransactiondetails\n         */\n        readonly includeTransactionDetails?: boolean | cdk.IResolvable;\n        /**\n         * Set this optional parameter to `true` to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to a Kafka target. Use the `NoHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the '0x' prefix.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-nohexprefix\n         */\n        readonly noHexPrefix?: boolean | cdk.IResolvable;\n        /**\n         * Prefixes schema and table names to partition values, when the partition type is `primary-key-type` . Doing this increases data distribution among Kafka partitions. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same partition, which causes throttling. The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-partitionincludeschematable\n         */\n        readonly partitionIncludeSchemaTable?: boolean | cdk.IResolvable;\n        /**\n         * The secure password you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-saslpassword\n         */\n        readonly saslPassword?: string;\n        /**\n         * The secure user name you created when you first set up your MSK cluster to validate a client identity and make an encrypted connection between server and client using SASL-SSL authentication.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-saslusername\n         */\n        readonly saslUserName?: string;\n        /**\n         * Set secure connection to a Kafka target endpoint using Transport Layer Security (TLS). Options include `ssl-encryption` , `ssl-authentication` , and `sasl-ssl` . `sasl-ssl` requires `SaslUsername` and `SaslPassword` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-securityprotocol\n         */\n        readonly securityProtocol?: string;\n        /**\n         * The Amazon Resource Name (ARN) for the private certificate authority (CA) cert that AWS DMS uses to securely connect to your Kafka target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-sslcacertificatearn\n         */\n        readonly sslCaCertificateArn?: string;\n        /**\n         * The Amazon Resource Name (ARN) of the client certificate used to securely connect to a Kafka target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-sslclientcertificatearn\n         */\n        readonly sslClientCertificateArn?: string;\n        /**\n         * The Amazon Resource Name (ARN) for the client private key used to securely connect to a Kafka target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-sslclientkeyarn\n         */\n        readonly sslClientKeyArn?: string;\n        /**\n         * The password for the client private key used to securely connect to a Kafka target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-sslclientkeypassword\n         */\n        readonly sslClientKeyPassword?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kafkasettings.html#cfn-dms-endpoint-kafkasettings-topic\n         */\n        readonly topic?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KafkaSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `KafkaSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_KafkaSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('broker', cdk.validateString)(properties.broker));\n    errors.collect(cdk.propertyValidator('includeControlDetails', cdk.validateBoolean)(properties.includeControlDetails));\n    errors.collect(cdk.propertyValidator('includeNullAndEmpty', cdk.validateBoolean)(properties.includeNullAndEmpty));\n    errors.collect(cdk.propertyValidator('includeTableAlterOperations', cdk.validateBoolean)(properties.includeTableAlterOperations));\n    errors.collect(cdk.propertyValidator('includeTransactionDetails', cdk.validateBoolean)(properties.includeTransactionDetails));\n    errors.collect(cdk.propertyValidator('noHexPrefix', cdk.validateBoolean)(properties.noHexPrefix));\n    errors.collect(cdk.propertyValidator('partitionIncludeSchemaTable', cdk.validateBoolean)(properties.partitionIncludeSchemaTable));\n    errors.collect(cdk.propertyValidator('saslPassword', cdk.validateString)(properties.saslPassword));\n    errors.collect(cdk.propertyValidator('saslUserName', cdk.validateString)(properties.saslUserName));\n    errors.collect(cdk.propertyValidator('securityProtocol', cdk.validateString)(properties.securityProtocol));\n    errors.collect(cdk.propertyValidator('sslCaCertificateArn', cdk.validateString)(properties.sslCaCertificateArn));\n    errors.collect(cdk.propertyValidator('sslClientCertificateArn', cdk.validateString)(properties.sslClientCertificateArn));\n    errors.collect(cdk.propertyValidator('sslClientKeyArn', cdk.validateString)(properties.sslClientKeyArn));\n    errors.collect(cdk.propertyValidator('sslClientKeyPassword', cdk.validateString)(properties.sslClientKeyPassword));\n    errors.collect(cdk.propertyValidator('topic', cdk.validateString)(properties.topic));\n    return errors.wrap('supplied properties not correct for \"KafkaSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.KafkaSettings` resource\n *\n * @param properties - the TypeScript properties of a `KafkaSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.KafkaSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointKafkaSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_KafkaSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        Broker: cdk.stringToCloudFormation(properties.broker),\n        IncludeControlDetails: cdk.booleanToCloudFormation(properties.includeControlDetails),\n        IncludeNullAndEmpty: cdk.booleanToCloudFormation(properties.includeNullAndEmpty),\n        IncludeTableAlterOperations: cdk.booleanToCloudFormation(properties.includeTableAlterOperations),\n        IncludeTransactionDetails: cdk.booleanToCloudFormation(properties.includeTransactionDetails),\n        NoHexPrefix: cdk.booleanToCloudFormation(properties.noHexPrefix),\n        PartitionIncludeSchemaTable: cdk.booleanToCloudFormation(properties.partitionIncludeSchemaTable),\n        SaslPassword: cdk.stringToCloudFormation(properties.saslPassword),\n        SaslUserName: cdk.stringToCloudFormation(properties.saslUserName),\n        SecurityProtocol: cdk.stringToCloudFormation(properties.securityProtocol),\n        SslCaCertificateArn: cdk.stringToCloudFormation(properties.sslCaCertificateArn),\n        SslClientCertificateArn: cdk.stringToCloudFormation(properties.sslClientCertificateArn),\n        SslClientKeyArn: cdk.stringToCloudFormation(properties.sslClientKeyArn),\n        SslClientKeyPassword: cdk.stringToCloudFormation(properties.sslClientKeyPassword),\n        Topic: cdk.stringToCloudFormation(properties.topic),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointKafkaSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.KafkaSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.KafkaSettingsProperty>();\n    ret.addPropertyResult('broker', 'Broker', properties.Broker != null ? cfn_parse.FromCloudFormation.getString(properties.Broker) : undefined);\n    ret.addPropertyResult('includeControlDetails', 'IncludeControlDetails', properties.IncludeControlDetails != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeControlDetails) : undefined);\n    ret.addPropertyResult('includeNullAndEmpty', 'IncludeNullAndEmpty', properties.IncludeNullAndEmpty != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeNullAndEmpty) : undefined);\n    ret.addPropertyResult('includeTableAlterOperations', 'IncludeTableAlterOperations', properties.IncludeTableAlterOperations != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTableAlterOperations) : undefined);\n    ret.addPropertyResult('includeTransactionDetails', 'IncludeTransactionDetails', properties.IncludeTransactionDetails != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTransactionDetails) : undefined);\n    ret.addPropertyResult('noHexPrefix', 'NoHexPrefix', properties.NoHexPrefix != null ? cfn_parse.FromCloudFormation.getBoolean(properties.NoHexPrefix) : undefined);\n    ret.addPropertyResult('partitionIncludeSchemaTable', 'PartitionIncludeSchemaTable', properties.PartitionIncludeSchemaTable != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PartitionIncludeSchemaTable) : undefined);\n    ret.addPropertyResult('saslPassword', 'SaslPassword', properties.SaslPassword != null ? cfn_parse.FromCloudFormation.getString(properties.SaslPassword) : undefined);\n    ret.addPropertyResult('saslUserName', 'SaslUserName', properties.SaslUserName != null ? cfn_parse.FromCloudFormation.getString(properties.SaslUserName) : undefined);\n    ret.addPropertyResult('securityProtocol', 'SecurityProtocol', properties.SecurityProtocol != null ? cfn_parse.FromCloudFormation.getString(properties.SecurityProtocol) : undefined);\n    ret.addPropertyResult('sslCaCertificateArn', 'SslCaCertificateArn', properties.SslCaCertificateArn != null ? cfn_parse.FromCloudFormation.getString(properties.SslCaCertificateArn) : undefined);\n    ret.addPropertyResult('sslClientCertificateArn', 'SslClientCertificateArn', properties.SslClientCertificateArn != null ? cfn_parse.FromCloudFormation.getString(properties.SslClientCertificateArn) : undefined);\n    ret.addPropertyResult('sslClientKeyArn', 'SslClientKeyArn', properties.SslClientKeyArn != null ? cfn_parse.FromCloudFormation.getString(properties.SslClientKeyArn) : undefined);\n    ret.addPropertyResult('sslClientKeyPassword', 'SslClientKeyPassword', properties.SslClientKeyPassword != null ? cfn_parse.FromCloudFormation.getString(properties.SslClientKeyPassword) : undefined);\n    ret.addPropertyResult('topic', 'Topic', properties.Topic != null ? cfn_parse.FromCloudFormation.getString(properties.Topic) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation ..\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html\n     */\n    export interface KinesisSettingsProperty {\n        /**\n         * Shows detailed control information for table definition, column definition, and table and column changes in the Kinesis message output. The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-includecontroldetails\n         */\n        readonly includeControlDetails?: boolean | cdk.IResolvable;\n        /**\n         * Include NULL and empty columns for records migrated to the endpoint. The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-includenullandempty\n         */\n        readonly includeNullAndEmpty?: boolean | cdk.IResolvable;\n        /**\n         * Includes any data definition language (DDL) operations that change the table in the control data, such as `rename-table` , `drop-table` , `add-column` , `drop-column` , and `rename-column` . The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-includetablealteroperations\n         */\n        readonly includeTableAlterOperations?: boolean | cdk.IResolvable;\n        /**\n         * Provides detailed transaction information from the source database. This information includes a commit timestamp, a log position, and values for `transaction_id` , previous `transaction_id` , and `transaction_record_id` (the record offset within a transaction). The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-includetransactiondetails\n         */\n        readonly includeTransactionDetails?: boolean | cdk.IResolvable;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-messageformat\n         */\n        readonly messageFormat?: string;\n        /**\n         * Set this optional parameter to `true` to avoid adding a '0x' prefix to raw data in hexadecimal format. For example, by default, AWS DMS adds a '0x' prefix to the LOB column type in hexadecimal format moving from an Oracle source to an Amazon Kinesis target. Use the `NoHexPrefix` endpoint setting to enable migration of RAW data type columns without adding the '0x' prefix.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-nohexprefix\n         */\n        readonly noHexPrefix?: boolean | cdk.IResolvable;\n        /**\n         * Prefixes schema and table names to partition values, when the partition type is `primary-key-type` . Doing this increases data distribution among Kinesis shards. For example, suppose that a SysBench schema has thousands of tables and each table has only limited range for a primary key. In this case, the same primary key is sent from thousands of tables to the same shard, which causes throttling. The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-partitionincludeschematable\n         */\n        readonly partitionIncludeSchemaTable?: boolean | cdk.IResolvable;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-serviceaccessrolearn\n         */\n        readonly serviceAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-kinesissettings.html#cfn-dms-endpoint-kinesissettings-streamarn\n         */\n        readonly streamArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `KinesisSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `KinesisSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_KinesisSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('includeControlDetails', cdk.validateBoolean)(properties.includeControlDetails));\n    errors.collect(cdk.propertyValidator('includeNullAndEmpty', cdk.validateBoolean)(properties.includeNullAndEmpty));\n    errors.collect(cdk.propertyValidator('includeTableAlterOperations', cdk.validateBoolean)(properties.includeTableAlterOperations));\n    errors.collect(cdk.propertyValidator('includeTransactionDetails', cdk.validateBoolean)(properties.includeTransactionDetails));\n    errors.collect(cdk.propertyValidator('messageFormat', cdk.validateString)(properties.messageFormat));\n    errors.collect(cdk.propertyValidator('noHexPrefix', cdk.validateBoolean)(properties.noHexPrefix));\n    errors.collect(cdk.propertyValidator('partitionIncludeSchemaTable', cdk.validateBoolean)(properties.partitionIncludeSchemaTable));\n    errors.collect(cdk.propertyValidator('serviceAccessRoleArn', cdk.validateString)(properties.serviceAccessRoleArn));\n    errors.collect(cdk.propertyValidator('streamArn', cdk.validateString)(properties.streamArn));\n    return errors.wrap('supplied properties not correct for \"KinesisSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.KinesisSettings` resource\n *\n * @param properties - the TypeScript properties of a `KinesisSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.KinesisSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointKinesisSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_KinesisSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        IncludeControlDetails: cdk.booleanToCloudFormation(properties.includeControlDetails),\n        IncludeNullAndEmpty: cdk.booleanToCloudFormation(properties.includeNullAndEmpty),\n        IncludeTableAlterOperations: cdk.booleanToCloudFormation(properties.includeTableAlterOperations),\n        IncludeTransactionDetails: cdk.booleanToCloudFormation(properties.includeTransactionDetails),\n        MessageFormat: cdk.stringToCloudFormation(properties.messageFormat),\n        NoHexPrefix: cdk.booleanToCloudFormation(properties.noHexPrefix),\n        PartitionIncludeSchemaTable: cdk.booleanToCloudFormation(properties.partitionIncludeSchemaTable),\n        ServiceAccessRoleArn: cdk.stringToCloudFormation(properties.serviceAccessRoleArn),\n        StreamArn: cdk.stringToCloudFormation(properties.streamArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointKinesisSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.KinesisSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.KinesisSettingsProperty>();\n    ret.addPropertyResult('includeControlDetails', 'IncludeControlDetails', properties.IncludeControlDetails != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeControlDetails) : undefined);\n    ret.addPropertyResult('includeNullAndEmpty', 'IncludeNullAndEmpty', properties.IncludeNullAndEmpty != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeNullAndEmpty) : undefined);\n    ret.addPropertyResult('includeTableAlterOperations', 'IncludeTableAlterOperations', properties.IncludeTableAlterOperations != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTableAlterOperations) : undefined);\n    ret.addPropertyResult('includeTransactionDetails', 'IncludeTransactionDetails', properties.IncludeTransactionDetails != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeTransactionDetails) : undefined);\n    ret.addPropertyResult('messageFormat', 'MessageFormat', properties.MessageFormat != null ? cfn_parse.FromCloudFormation.getString(properties.MessageFormat) : undefined);\n    ret.addPropertyResult('noHexPrefix', 'NoHexPrefix', properties.NoHexPrefix != null ? cfn_parse.FromCloudFormation.getBoolean(properties.NoHexPrefix) : undefined);\n    ret.addPropertyResult('partitionIncludeSchemaTable', 'PartitionIncludeSchemaTable', properties.PartitionIncludeSchemaTable != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PartitionIncludeSchemaTable) : undefined);\n    ret.addPropertyResult('serviceAccessRoleArn', 'ServiceAccessRoleArn', properties.ServiceAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn) : undefined);\n    ret.addPropertyResult('streamArn', 'StreamArn', properties.StreamArn != null ? cfn_parse.FromCloudFormation.getString(properties.StreamArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html\n     */\n    export interface MicrosoftSqlServerSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-microsoftsqlserversettings.html#cfn-dms-endpoint-microsoftsqlserversettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MicrosoftSqlServerSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `MicrosoftSqlServerSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_MicrosoftSqlServerSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"MicrosoftSqlServerSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.MicrosoftSqlServerSettings` resource\n *\n * @param properties - the TypeScript properties of a `MicrosoftSqlServerSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.MicrosoftSqlServerSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointMicrosoftSqlServerSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_MicrosoftSqlServerSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointMicrosoftSqlServerSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.MicrosoftSqlServerSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.MicrosoftSqlServerSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html\n     */\n    export interface MongoDbSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-authmechanism\n         */\n        readonly authMechanism?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-authsource\n         */\n        readonly authSource?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-authtype\n         */\n        readonly authType?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-databasename\n         */\n        readonly databaseName?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-docstoinvestigate\n         */\n        readonly docsToInvestigate?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-extractdocid\n         */\n        readonly extractDocId?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-nestinglevel\n         */\n        readonly nestingLevel?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-password\n         */\n        readonly password?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-port\n         */\n        readonly port?: number;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-servername\n         */\n        readonly serverName?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mongodbsettings.html#cfn-dms-endpoint-mongodbsettings-username\n         */\n        readonly username?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MongoDbSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `MongoDbSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_MongoDbSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authMechanism', cdk.validateString)(properties.authMechanism));\n    errors.collect(cdk.propertyValidator('authSource', cdk.validateString)(properties.authSource));\n    errors.collect(cdk.propertyValidator('authType', cdk.validateString)(properties.authType));\n    errors.collect(cdk.propertyValidator('databaseName', cdk.validateString)(properties.databaseName));\n    errors.collect(cdk.propertyValidator('docsToInvestigate', cdk.validateString)(properties.docsToInvestigate));\n    errors.collect(cdk.propertyValidator('extractDocId', cdk.validateString)(properties.extractDocId));\n    errors.collect(cdk.propertyValidator('nestingLevel', cdk.validateString)(properties.nestingLevel));\n    errors.collect(cdk.propertyValidator('password', cdk.validateString)(properties.password));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    errors.collect(cdk.propertyValidator('serverName', cdk.validateString)(properties.serverName));\n    errors.collect(cdk.propertyValidator('username', cdk.validateString)(properties.username));\n    return errors.wrap('supplied properties not correct for \"MongoDbSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.MongoDbSettings` resource\n *\n * @param properties - the TypeScript properties of a `MongoDbSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.MongoDbSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointMongoDbSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_MongoDbSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        AuthMechanism: cdk.stringToCloudFormation(properties.authMechanism),\n        AuthSource: cdk.stringToCloudFormation(properties.authSource),\n        AuthType: cdk.stringToCloudFormation(properties.authType),\n        DatabaseName: cdk.stringToCloudFormation(properties.databaseName),\n        DocsToInvestigate: cdk.stringToCloudFormation(properties.docsToInvestigate),\n        ExtractDocId: cdk.stringToCloudFormation(properties.extractDocId),\n        NestingLevel: cdk.stringToCloudFormation(properties.nestingLevel),\n        Password: cdk.stringToCloudFormation(properties.password),\n        Port: cdk.numberToCloudFormation(properties.port),\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n        ServerName: cdk.stringToCloudFormation(properties.serverName),\n        Username: cdk.stringToCloudFormation(properties.username),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointMongoDbSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.MongoDbSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.MongoDbSettingsProperty>();\n    ret.addPropertyResult('authMechanism', 'AuthMechanism', properties.AuthMechanism != null ? cfn_parse.FromCloudFormation.getString(properties.AuthMechanism) : undefined);\n    ret.addPropertyResult('authSource', 'AuthSource', properties.AuthSource != null ? cfn_parse.FromCloudFormation.getString(properties.AuthSource) : undefined);\n    ret.addPropertyResult('authType', 'AuthType', properties.AuthType != null ? cfn_parse.FromCloudFormation.getString(properties.AuthType) : undefined);\n    ret.addPropertyResult('databaseName', 'DatabaseName', properties.DatabaseName != null ? cfn_parse.FromCloudFormation.getString(properties.DatabaseName) : undefined);\n    ret.addPropertyResult('docsToInvestigate', 'DocsToInvestigate', properties.DocsToInvestigate != null ? cfn_parse.FromCloudFormation.getString(properties.DocsToInvestigate) : undefined);\n    ret.addPropertyResult('extractDocId', 'ExtractDocId', properties.ExtractDocId != null ? cfn_parse.FromCloudFormation.getString(properties.ExtractDocId) : undefined);\n    ret.addPropertyResult('nestingLevel', 'NestingLevel', properties.NestingLevel != null ? cfn_parse.FromCloudFormation.getString(properties.NestingLevel) : undefined);\n    ret.addPropertyResult('password', 'Password', properties.Password != null ? cfn_parse.FromCloudFormation.getString(properties.Password) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addPropertyResult('serverName', 'ServerName', properties.ServerName != null ? cfn_parse.FromCloudFormation.getString(properties.ServerName) : undefined);\n    ret.addPropertyResult('username', 'Username', properties.Username != null ? cfn_parse.FromCloudFormation.getString(properties.Username) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mysqlsettings.html\n     */\n    export interface MySqlSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mysqlsettings.html#cfn-dms-endpoint-mysqlsettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-mysqlsettings.html#cfn-dms-endpoint-mysqlsettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `MySqlSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `MySqlSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_MySqlSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"MySqlSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.MySqlSettings` resource\n *\n * @param properties - the TypeScript properties of a `MySqlSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.MySqlSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointMySqlSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_MySqlSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointMySqlSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.MySqlSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.MySqlSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Provides information that defines an Amazon Neptune endpoint.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html\n     */\n    export interface NeptuneSettingsProperty {\n        /**\n         * The number of milliseconds for AWS DMS to wait to retry a bulk-load of migrated graph data to the Neptune target database before raising an error. The default is 250.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-errorretryduration\n         */\n        readonly errorRetryDuration?: number;\n        /**\n         * If you want AWS Identity and Access Management (IAM) authorization enabled for this endpoint, set this parameter to `true` . Then attach the appropriate IAM policy document to your service role specified by `ServiceAccessRoleArn` . The default is `false` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-iamauthenabled\n         */\n        readonly iamAuthEnabled?: boolean | cdk.IResolvable;\n        /**\n         * The maximum size in kilobytes of migrated graph data stored in a .csv file before AWS DMS bulk-loads the data to the Neptune target database. The default is 1,048,576 KB. If the bulk load is successful, AWS DMS clears the bucket, ready to store the next batch of migrated graph data.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-maxfilesize\n         */\n        readonly maxFileSize?: number;\n        /**\n         * The number of times for AWS DMS to retry a bulk load of migrated graph data to the Neptune target database before raising an error. The default is 5.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-maxretrycount\n         */\n        readonly maxRetryCount?: number;\n        /**\n         * A folder path where you want AWS DMS to store migrated graph data in the S3 bucket specified by `S3BucketName`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-s3bucketfolder\n         */\n        readonly s3BucketFolder?: string;\n        /**\n         * The name of the Amazon S3 bucket where AWS DMS can temporarily store migrated graph data in .csv files before bulk-loading it to the Neptune target database. AWS DMS maps the SQL source data to graph data before storing it in these .csv files.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-s3bucketname\n         */\n        readonly s3BucketName?: string;\n        /**\n         * The Amazon Resource Name (ARN) of the service role that you created for the Neptune target endpoint. The role must allow the `iam:PassRole` action. For more information, see [Creating an IAM Service Role for Accessing Amazon Neptune as a Target](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.Neptune.html#CHAP_Target.Neptune.ServiceRole) in the *AWS Database Migration Service User Guide.*\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-neptunesettings.html#cfn-dms-endpoint-neptunesettings-serviceaccessrolearn\n         */\n        readonly serviceAccessRoleArn?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `NeptuneSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `NeptuneSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_NeptuneSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('errorRetryDuration', cdk.validateNumber)(properties.errorRetryDuration));\n    errors.collect(cdk.propertyValidator('iamAuthEnabled', cdk.validateBoolean)(properties.iamAuthEnabled));\n    errors.collect(cdk.propertyValidator('maxFileSize', cdk.validateNumber)(properties.maxFileSize));\n    errors.collect(cdk.propertyValidator('maxRetryCount', cdk.validateNumber)(properties.maxRetryCount));\n    errors.collect(cdk.propertyValidator('s3BucketFolder', cdk.validateString)(properties.s3BucketFolder));\n    errors.collect(cdk.propertyValidator('s3BucketName', cdk.validateString)(properties.s3BucketName));\n    errors.collect(cdk.propertyValidator('serviceAccessRoleArn', cdk.validateString)(properties.serviceAccessRoleArn));\n    return errors.wrap('supplied properties not correct for \"NeptuneSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.NeptuneSettings` resource\n *\n * @param properties - the TypeScript properties of a `NeptuneSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.NeptuneSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointNeptuneSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_NeptuneSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        ErrorRetryDuration: cdk.numberToCloudFormation(properties.errorRetryDuration),\n        IamAuthEnabled: cdk.booleanToCloudFormation(properties.iamAuthEnabled),\n        MaxFileSize: cdk.numberToCloudFormation(properties.maxFileSize),\n        MaxRetryCount: cdk.numberToCloudFormation(properties.maxRetryCount),\n        S3BucketFolder: cdk.stringToCloudFormation(properties.s3BucketFolder),\n        S3BucketName: cdk.stringToCloudFormation(properties.s3BucketName),\n        ServiceAccessRoleArn: cdk.stringToCloudFormation(properties.serviceAccessRoleArn),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointNeptuneSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.NeptuneSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.NeptuneSettingsProperty>();\n    ret.addPropertyResult('errorRetryDuration', 'ErrorRetryDuration', properties.ErrorRetryDuration != null ? cfn_parse.FromCloudFormation.getNumber(properties.ErrorRetryDuration) : undefined);\n    ret.addPropertyResult('iamAuthEnabled', 'IamAuthEnabled', properties.IamAuthEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IamAuthEnabled) : undefined);\n    ret.addPropertyResult('maxFileSize', 'MaxFileSize', properties.MaxFileSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize) : undefined);\n    ret.addPropertyResult('maxRetryCount', 'MaxRetryCount', properties.MaxRetryCount != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxRetryCount) : undefined);\n    ret.addPropertyResult('s3BucketFolder', 'S3BucketFolder', properties.S3BucketFolder != null ? cfn_parse.FromCloudFormation.getString(properties.S3BucketFolder) : undefined);\n    ret.addPropertyResult('s3BucketName', 'S3BucketName', properties.S3BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.S3BucketName) : undefined);\n    ret.addPropertyResult('serviceAccessRoleArn', 'ServiceAccessRoleArn', properties.ServiceAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-oraclesettings.html\n     */\n    export interface OracleSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-oraclesettings.html#cfn-dms-endpoint-oraclesettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-oraclesettings.html#cfn-dms-endpoint-oraclesettings-secretsmanageroracleasmaccessrolearn\n         */\n        readonly secretsManagerOracleAsmAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-oraclesettings.html#cfn-dms-endpoint-oraclesettings-secretsmanageroracleasmsecretid\n         */\n        readonly secretsManagerOracleAsmSecretId?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-oraclesettings.html#cfn-dms-endpoint-oraclesettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `OracleSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `OracleSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_OracleSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerOracleAsmAccessRoleArn', cdk.validateString)(properties.secretsManagerOracleAsmAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerOracleAsmSecretId', cdk.validateString)(properties.secretsManagerOracleAsmSecretId));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"OracleSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.OracleSettings` resource\n *\n * @param properties - the TypeScript properties of a `OracleSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.OracleSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointOracleSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_OracleSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerOracleAsmAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerOracleAsmAccessRoleArn),\n        SecretsManagerOracleAsmSecretId: cdk.stringToCloudFormation(properties.secretsManagerOracleAsmSecretId),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointOracleSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.OracleSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.OracleSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerOracleAsmAccessRoleArn', 'SecretsManagerOracleAsmAccessRoleArn', properties.SecretsManagerOracleAsmAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerOracleAsmAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerOracleAsmSecretId', 'SecretsManagerOracleAsmSecretId', properties.SecretsManagerOracleAsmSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerOracleAsmSecretId) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-postgresqlsettings.html\n     */\n    export interface PostgreSqlSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-postgresqlsettings.html#cfn-dms-endpoint-postgresqlsettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-postgresqlsettings.html#cfn-dms-endpoint-postgresqlsettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `PostgreSqlSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `PostgreSqlSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_PostgreSqlSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"PostgreSqlSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.PostgreSqlSettings` resource\n *\n * @param properties - the TypeScript properties of a `PostgreSqlSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.PostgreSqlSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointPostgreSqlSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_PostgreSqlSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointPostgreSqlSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.PostgreSqlSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.PostgreSqlSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Provides information that defines a Redis target endpoint.\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html\n     */\n    export interface RedisSettingsProperty {\n        /**\n         * The password provided with the `auth-role` and `auth-token` options of the `AuthType` setting for a Redis target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-authpassword\n         */\n        readonly authPassword?: string;\n        /**\n         * The type of authentication to perform when connecting to a Redis target. Options include `none` , `auth-token` , and `auth-role` . The `auth-token` option requires an `AuthPassword` value to be provided. The `auth-role` option requires `AuthUserName` and `AuthPassword` values to be provided.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-authtype\n         */\n        readonly authType?: string;\n        /**\n         * The user name provided with the `auth-role` option of the `AuthType` setting for a Redis target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-authusername\n         */\n        readonly authUserName?: string;\n        /**\n         * Transmission Control Protocol (TCP) port for the endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-port\n         */\n        readonly port?: number;\n        /**\n         * Fully qualified domain name of the endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-servername\n         */\n        readonly serverName?: string;\n        /**\n         * The Amazon Resource Name (ARN) for the certificate authority (CA) that DMS uses to connect to your Redis target endpoint.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-sslcacertificatearn\n         */\n        readonly sslCaCertificateArn?: string;\n        /**\n         * The connection to a Redis target endpoint using Transport Layer Security (TLS). Valid values include `plaintext` and `ssl-encryption` . The default is `ssl-encryption` . The `ssl-encryption` option makes an encrypted connection. Optionally, you can identify an Amazon Resource Name (ARN) for an SSL certificate authority (CA) using the `SslCaCertificateArn` setting. If an ARN isn't given for a CA, DMS uses the Amazon root CA.\n         *\n         * The `plaintext` option doesn't provide Transport Layer Security (TLS) encryption for traffic between endpoint and database.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redissettings.html#cfn-dms-endpoint-redissettings-sslsecurityprotocol\n         */\n        readonly sslSecurityProtocol?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RedisSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `RedisSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_RedisSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('authPassword', cdk.validateString)(properties.authPassword));\n    errors.collect(cdk.propertyValidator('authType', cdk.validateString)(properties.authType));\n    errors.collect(cdk.propertyValidator('authUserName', cdk.validateString)(properties.authUserName));\n    errors.collect(cdk.propertyValidator('port', cdk.validateNumber)(properties.port));\n    errors.collect(cdk.propertyValidator('serverName', cdk.validateString)(properties.serverName));\n    errors.collect(cdk.propertyValidator('sslCaCertificateArn', cdk.validateString)(properties.sslCaCertificateArn));\n    errors.collect(cdk.propertyValidator('sslSecurityProtocol', cdk.validateString)(properties.sslSecurityProtocol));\n    return errors.wrap('supplied properties not correct for \"RedisSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.RedisSettings` resource\n *\n * @param properties - the TypeScript properties of a `RedisSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.RedisSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointRedisSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_RedisSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        AuthPassword: cdk.stringToCloudFormation(properties.authPassword),\n        AuthType: cdk.stringToCloudFormation(properties.authType),\n        AuthUserName: cdk.stringToCloudFormation(properties.authUserName),\n        Port: cdk.numberToCloudFormation(properties.port),\n        ServerName: cdk.stringToCloudFormation(properties.serverName),\n        SslCaCertificateArn: cdk.stringToCloudFormation(properties.sslCaCertificateArn),\n        SslSecurityProtocol: cdk.stringToCloudFormation(properties.sslSecurityProtocol),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointRedisSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.RedisSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.RedisSettingsProperty>();\n    ret.addPropertyResult('authPassword', 'AuthPassword', properties.AuthPassword != null ? cfn_parse.FromCloudFormation.getString(properties.AuthPassword) : undefined);\n    ret.addPropertyResult('authType', 'AuthType', properties.AuthType != null ? cfn_parse.FromCloudFormation.getString(properties.AuthType) : undefined);\n    ret.addPropertyResult('authUserName', 'AuthUserName', properties.AuthUserName != null ? cfn_parse.FromCloudFormation.getString(properties.AuthUserName) : undefined);\n    ret.addPropertyResult('port', 'Port', properties.Port != null ? cfn_parse.FromCloudFormation.getNumber(properties.Port) : undefined);\n    ret.addPropertyResult('serverName', 'ServerName', properties.ServerName != null ? cfn_parse.FromCloudFormation.getString(properties.ServerName) : undefined);\n    ret.addPropertyResult('sslCaCertificateArn', 'SslCaCertificateArn', properties.SslCaCertificateArn != null ? cfn_parse.FromCloudFormation.getString(properties.SslCaCertificateArn) : undefined);\n    ret.addPropertyResult('sslSecurityProtocol', 'SslSecurityProtocol', properties.SslSecurityProtocol != null ? cfn_parse.FromCloudFormation.getString(properties.SslSecurityProtocol) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redshiftsettings.html\n     */\n    export interface RedshiftSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redshiftsettings.html#cfn-dms-endpoint-redshiftsettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-redshiftsettings.html#cfn-dms-endpoint-redshiftsettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `RedshiftSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `RedshiftSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_RedshiftSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"RedshiftSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.RedshiftSettings` resource\n *\n * @param properties - the TypeScript properties of a `RedshiftSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.RedshiftSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointRedshiftSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_RedshiftSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointRedshiftSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.RedshiftSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.RedshiftSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html\n     */\n    export interface S3SettingsProperty {\n        /**\n         * An optional parameter that, when set to `true` or `y` , you can use to add column name information to the .csv output file.\n         *\n         * The default value is `false` . Valid values are `true` , `false` , `y` , and `n` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-addcolumnname\n         */\n        readonly addColumnName?: boolean | cdk.IResolvable;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-bucketfolder\n         */\n        readonly bucketFolder?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-bucketname\n         */\n        readonly bucketName?: string;\n        /**\n         * A value that enables AWS DMS to specify a predefined (canned) access control list for objects created in an Amazon S3 bucket as .csv or .parquet files. For more information about Amazon S3 canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/http://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 Developer Guide.*\n         *\n         * The default value is NONE. Valid values include NONE, PRIVATE, PUBLIC_READ, PUBLIC_READ_WRITE, AUTHENTICATED_READ, AWS_EXEC_READ, BUCKET_OWNER_READ, and BUCKET_OWNER_FULL_CONTROL.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-cannedaclforobjects\n         */\n        readonly cannedAclForObjects?: string;\n        /**\n         * A value that enables a change data capture (CDC) load to write INSERT and UPDATE operations to .csv or .parquet (columnar storage) output files. The default setting is `false` , but when `CdcInsertsAndUpdates` is set to `true` or `y` , only INSERTs and UPDATEs from the source database are migrated to the .csv or .parquet file.\n         *\n         * For .csv file format only, how these INSERTs and UPDATEs are recorded depends on the value of the `IncludeOpForFullLoad` parameter. If `IncludeOpForFullLoad` is set to `true` , the first field of every CDC record is set to either `I` or `U` to indicate INSERT and UPDATE operations at the source. But if `IncludeOpForFullLoad` is set to `false` , CDC records are written without an indication of INSERT or UPDATE operations at the source. For more information about how these settings work together, see [Indicating Source DB Operations in Migrated S3 Data](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps) in the *AWS Database Migration Service User Guide.* .\n         *\n         * > AWS DMS supports the use of the `CdcInsertsAndUpdates` parameter in versions 3.3.1 and later.\n         * >\n         * > `CdcInsertsOnly` and `CdcInsertsAndUpdates` can't both be set to `true` for the same endpoint. Set either `CdcInsertsOnly` or `CdcInsertsAndUpdates` to `true` for the same endpoint, but not both.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-cdcinsertsandupdates\n         */\n        readonly cdcInsertsAndUpdates?: boolean | cdk.IResolvable;\n        /**\n         * A value that enables a change data capture (CDC) load to write only INSERT operations to .csv or columnar storage (.parquet) output files. By default (the `false` setting), the first field in a .csv or .parquet record contains the letter I (INSERT), U (UPDATE), or D (DELETE). These values indicate whether the row was inserted, updated, or deleted at the source database for a CDC load to the target.\n         *\n         * If `CdcInsertsOnly` is set to `true` or `y` , only INSERTs from the source database are migrated to the .csv or .parquet file. For .csv format only, how these INSERTs are recorded depends on the value of `IncludeOpForFullLoad` . If `IncludeOpForFullLoad` is set to `true` , the first field of every CDC record is set to I to indicate the INSERT operation at the source. If `IncludeOpForFullLoad` is set to `false` , every CDC record is written without a first field to indicate the INSERT operation at the source. For more information about how these settings work together, see [Indicating Source DB Operations in Migrated S3 Data](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps) in the *AWS Database Migration Service User Guide.* .\n         *\n         * > AWS DMS supports the interaction described preceding between the `CdcInsertsOnly` and `IncludeOpForFullLoad` parameters in versions 3.1.4 and later.\n         * >\n         * > `CdcInsertsOnly` and `CdcInsertsAndUpdates` can't both be set to `true` for the same endpoint. Set either `CdcInsertsOnly` or `CdcInsertsAndUpdates` to `true` for the same endpoint, but not both.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-cdcinsertsonly\n         */\n        readonly cdcInsertsOnly?: boolean | cdk.IResolvable;\n        /**\n         * Maximum length of the interval, defined in seconds, after which to output a file to Amazon S3.\n         *\n         * When `CdcMaxBatchInterval` and `CdcMinFileSize` are both specified, the file write is triggered by whichever parameter condition is met first within an AWS DMS CloudFormation template.\n         *\n         * The default value is 60 seconds.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-cdcmaxbatchinterval\n         */\n        readonly cdcMaxBatchInterval?: number;\n        /**\n         * Minimum file size, defined in megabytes, to reach for a file output to Amazon S3.\n         *\n         * When `CdcMinFileSize` and `CdcMaxBatchInterval` are both specified, the file write is triggered by whichever parameter condition is met first within an AWS DMS CloudFormation template.\n         *\n         * The default value is 32 MB.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-cdcminfilesize\n         */\n        readonly cdcMinFileSize?: number;\n        /**\n         * Specifies the folder path of CDC files. For an S3 source, this setting is required if a task captures change data; otherwise, it's optional. If `CdcPath` is set, AWS DMS reads CDC files from this path and replicates the data changes to the target endpoint. For an S3 target if you set [`PreserveTransactions`](https://docs.aws.amazon.com/dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-PreserveTransactions) to `true` , AWS DMS verifies that you have set this parameter to a folder path on your S3 target where AWS DMS can save the transaction order for the CDC load. AWS DMS creates this CDC folder path in either your S3 target working directory or the S3 target location specified by [`BucketFolder`](https://docs.aws.amazon.com/dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-BucketFolder) and [`BucketName`](https://docs.aws.amazon.com/dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-BucketName) .\n         *\n         * For example, if you specify `CdcPath` as `MyChangedData` , and you specify `BucketName` as `MyTargetBucket` but do not specify `BucketFolder` , AWS DMS creates the CDC folder path following: `MyTargetBucket/MyChangedData` .\n         *\n         * If you specify the same `CdcPath` , and you specify `BucketName` as `MyTargetBucket` and `BucketFolder` as `MyTargetData` , AWS DMS creates the CDC folder path following: `MyTargetBucket/MyTargetData/MyChangedData` .\n         *\n         * For more information on CDC including transaction order on an S3 target, see [Capturing data changes (CDC) including transaction order on the S3 target](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.EndpointSettings.CdcPath) .\n         *\n         * > This setting is supported in AWS DMS versions 3.4.2 and later.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-cdcpath\n         */\n        readonly cdcPath?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-compressiontype\n         */\n        readonly compressionType?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-csvdelimiter\n         */\n        readonly csvDelimiter?: string;\n        /**\n         * This setting only applies if your Amazon S3 output files during a change data capture (CDC) load are written in .csv format. If [`UseCsvNoSupValue`](https://docs.aws.amazon.com/dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-UseCsvNoSupValue) is set to true, specify a string value that you want AWS DMS to use for all columns not included in the supplemental log. If you do not specify a string value, AWS DMS uses the null value for these columns regardless of the `UseCsvNoSupValue` setting.\n         *\n         * > This setting is supported in AWS DMS versions 3.4.1 and later.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-csvnosupvalue\n         */\n        readonly csvNoSupValue?: string;\n        /**\n         * An optional parameter that specifies how AWS DMS treats null values. While handling the null value, you can use this parameter to pass a user-defined string as null when writing to the target. For example, when target columns are not nullable, you can use this option to differentiate between the empty string value and the null value. So, if you set this parameter value to the empty string (\"\" or ''), AWS DMS treats the empty string as the null value instead of `NULL` .\n         *\n         * The default value is `NULL` . Valid values include any valid string.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-csvnullvalue\n         */\n        readonly csvNullValue?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-csvrowdelimiter\n         */\n        readonly csvRowDelimiter?: string;\n        /**\n         * The format of the data that you want to use for output. You can choose one of the following:\n         *\n         * - `csv` : This is a row-based file format with comma-separated values (.csv).\n         * - `parquet` : Apache Parquet (.parquet) is a columnar storage file format that features efficient compression and provides faster query response.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-dataformat\n         */\n        readonly dataFormat?: string;\n        /**\n         * The size of one data page in bytes. This parameter defaults to 1024 * 1024 bytes (1 MiB). This number is used for .parquet file format only.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-datapagesize\n         */\n        readonly dataPageSize?: number;\n        /**\n         * Specifies a date separating delimiter to use during folder partitioning. The default value is `SLASH` . Use this parameter when `DatePartitionedEnabled` is set to `true` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-datepartitiondelimiter\n         */\n        readonly datePartitionDelimiter?: string;\n        /**\n         * When set to `true` , this parameter partitions S3 bucket folders based on transaction commit dates. The default value is `false` . For more information about date-based folder partitioning, see [Using date-based folder partitioning](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.DatePartitioning) .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-datepartitionenabled\n         */\n        readonly datePartitionEnabled?: boolean | cdk.IResolvable;\n        /**\n         * Identifies the sequence of the date format to use during folder partitioning. The default value is `YYYYMMDD` . Use this parameter when `DatePartitionedEnabled` is set to `true` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-datepartitionsequence\n         */\n        readonly datePartitionSequence?: string;\n        /**\n         * When creating an S3 target endpoint, set `DatePartitionTimezone` to convert the current UTC time into a specified time zone. The conversion occurs when a date partition folder is created and a CDC filename is generated. The time zone format is Area/Location. Use this parameter when `DatePartitionedEnabled` is set to `true` , as shown in the following example.\n         *\n         * `s3-settings='{\"DatePartitionEnabled\": true, \"DatePartitionSequence\": \"YYYYMMDDHH\", \"DatePartitionDelimiter\": \"SLASH\", \"DatePartitionTimezone\":\" *Asia/Seoul* \", \"BucketName\": \"dms-nattarat-test\"}'`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-datepartitiontimezone\n         */\n        readonly datePartitionTimezone?: string;\n        /**\n         * The maximum size of an encoded dictionary page of a column. If the dictionary page exceeds this, this column is stored using an encoding type of `PLAIN` . This parameter defaults to 1024 * 1024 bytes (1 MiB), the maximum size of a dictionary page before it reverts to `PLAIN` encoding. This size is used for .parquet file format only.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-dictpagesizelimit\n         */\n        readonly dictPageSizeLimit?: number;\n        /**\n         * A value that enables statistics for Parquet pages and row groups. Choose `true` to enable statistics, `false` to disable. Statistics include `NULL` , `DISTINCT` , `MAX` , and `MIN` values. This parameter defaults to `true` . This value is used for .parquet file format only.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-enablestatistics\n         */\n        readonly enableStatistics?: boolean | cdk.IResolvable;\n        /**\n         * The type of encoding you are using:\n         *\n         * - `RLE_DICTIONARY` uses a combination of bit-packing and run-length encoding to store repeated values more efficiently. This is the default.\n         * - `PLAIN` doesn't use encoding at all. Values are stored as they are.\n         * - `PLAIN_DICTIONARY` builds a dictionary of the values encountered in a given column. The dictionary is stored in a dictionary page for each column chunk.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-encodingtype\n         */\n        readonly encodingType?: string;\n        /**\n         * The type of server-side encryption that you want to use for your data. This encryption type is part of the endpoint settings or the extra connections attributes for Amazon S3. You can choose either `SSE_S3` (the default) or `SSE_KMS` .\n         *\n         * > For the `ModifyEndpoint` operation, you can change the existing value of the `EncryptionMode` parameter from `SSE_KMS` to `SSE_S3` . But you can\u2019t change the existing value from `SSE_S3` to `SSE_KMS` .\n         *\n         * To use `SSE_S3` , you need an AWS Identity and Access Management (IAM) role with permission to allow `\"arn:aws:s3:::dms-*\"` to use the following actions:\n         *\n         * - `s3:CreateBucket`\n         * - `s3:ListBucket`\n         * - `s3:DeleteBucket`\n         * - `s3:GetBucketLocation`\n         * - `s3:GetObject`\n         * - `s3:PutObject`\n         * - `s3:DeleteObject`\n         * - `s3:GetObjectVersion`\n         * - `s3:GetBucketPolicy`\n         * - `s3:PutBucketPolicy`\n         * - `s3:DeleteBucketPolicy`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-encryptionmode\n         */\n        readonly encryptionMode?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-externaltabledefinition\n         */\n        readonly externalTableDefinition?: string;\n        /**\n         * When this value is set to 1, AWS DMS ignores the first row header in a .csv file. A value of 1 turns on the feature; a value of 0 turns off the feature.\n         *\n         * The default is 0.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-ignoreheaderrows\n         */\n        readonly ignoreHeaderRows?: number;\n        /**\n         * A value that enables a full load to write INSERT operations to the comma-separated value (.csv) output files only to indicate how the rows were added to the source database.\n         *\n         * > AWS DMS supports the `IncludeOpForFullLoad` parameter in versions 3.1.4 and later.\n         *\n         * For full load, records can only be inserted. By default (the `false` setting), no information is recorded in these output files for a full load to indicate that the rows were inserted at the source database. If `IncludeOpForFullLoad` is set to `true` or `y` , the INSERT is recorded as an I annotation in the first field of the .csv file. This allows the format of your target records from a full load to be consistent with the target records from a CDC load.\n         *\n         * > This setting works together with the `CdcInsertsOnly` and the `CdcInsertsAndUpdates` parameters for output to .csv files only. For more information about how these settings work together, see [Indicating Source DB Operations in Migrated S3 Data](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.Configuring.InsertOps) in the *AWS Database Migration Service User Guide.* .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-includeopforfullload\n         */\n        readonly includeOpForFullLoad?: boolean | cdk.IResolvable;\n        /**\n         * A value that specifies the maximum size (in KB) of any .csv file to be created while migrating to an S3 target during full load.\n         *\n         * The default value is 1,048,576 KB (1 GB). Valid values include 1 to 1,048,576.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-maxfilesize\n         */\n        readonly maxFileSize?: number;\n        /**\n         * A value that specifies the precision of any `TIMESTAMP` column values that are written to an Amazon S3 object file in .parquet format.\n         *\n         * > AWS DMS supports the `ParquetTimestampInMillisecond` parameter in versions 3.1.4 and later.\n         *\n         * When `ParquetTimestampInMillisecond` is set to `true` or `y` , AWS DMS writes all `TIMESTAMP` columns in a .parquet formatted file with millisecond precision. Otherwise, DMS writes them with microsecond precision.\n         *\n         * Currently, Amazon Athena and AWS Glue can handle only millisecond precision for `TIMESTAMP` values. Set this parameter to `true` for S3 endpoint object files that are .parquet formatted only if you plan to query or process the data with Athena or AWS Glue .\n         *\n         * > AWS DMS writes any `TIMESTAMP` column values written to an S3 file in .csv format with microsecond precision.\n         * >\n         * > Setting `ParquetTimestampInMillisecond` has no effect on the string format of the timestamp column value that is inserted by setting the `TimestampColumnName` parameter.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-parquettimestampinmillisecond\n         */\n        readonly parquetTimestampInMillisecond?: boolean | cdk.IResolvable;\n        /**\n         * The version of the Apache Parquet format that you want to use: `parquet_1_0` (the default) or `parquet_2_0` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-parquetversion\n         */\n        readonly parquetVersion?: string;\n        /**\n         * If set to `true` , AWS DMS saves the transaction order for a change data capture (CDC) load on the Amazon S3 target specified by [`CdcPath`](https://docs.aws.amazon.com/dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-CdcPath) . For more information, see [Capturing data changes (CDC) including transaction order on the S3 target](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Target.S3.html#CHAP_Target.S3.EndpointSettings.CdcPath) .\n         *\n         * > This setting is supported in AWS DMS versions 3.4.2 and later.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-preservetransactions\n         */\n        readonly preserveTransactions?: boolean | cdk.IResolvable;\n        /**\n         * For an S3 source, when this value is set to `true` or `y` , each leading double quotation mark has to be followed by an ending double quotation mark. This formatting complies with RFC 4180. When this value is set to `false` or `n` , string literals are copied to the target as is. In this case, a delimiter (row or column) signals the end of the field. Thus, you can't use a delimiter as part of the string, because it signals the end of the value.\n         *\n         * For an S3 target, an optional parameter used to set behavior to comply with RFC 4180 for data migrated to Amazon S3 using .csv file format only. When this value is set to `true` or `y` using Amazon S3 as a target, if the data has quotation marks or newline characters in it, AWS DMS encloses the entire column with an additional pair of double quotation marks (\"). Every quotation mark within the data is repeated twice.\n         *\n         * The default value is `true` . Valid values include `true` , `false` , `y` , and `n` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-rfc4180\n         */\n        readonly rfc4180?: boolean | cdk.IResolvable;\n        /**\n         * The number of rows in a row group. A smaller row group size provides faster reads. But as the number of row groups grows, the slower writes become. This parameter defaults to 10,000 rows. This number is used for .parquet file format only.\n         *\n         * If you choose a value larger than the maximum, `RowGroupLength` is set to the max row group length in bytes (64 * 1024 * 1024).\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-rowgrouplength\n         */\n        readonly rowGroupLength?: number;\n        /**\n         * If you are using `SSE_KMS` for the `EncryptionMode` , provide the AWS KMS key ID. The key that you use needs an attached policy that enables AWS Identity and Access Management (IAM) user permissions and allows use of the key.\n         *\n         * Here is a CLI example: `aws dms create-endpoint --endpoint-identifier *value* --endpoint-type target --engine-name s3 --s3-settings ServiceAccessRoleArn= *value* ,BucketFolder= *value* ,BucketName= *value* ,EncryptionMode=SSE_KMS,ServerSideEncryptionKmsKeyId= *value*`\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-serversideencryptionkmskeyid\n         */\n        readonly serverSideEncryptionKmsKeyId?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-serviceaccessrolearn\n         */\n        readonly serviceAccessRoleArn?: string;\n        /**\n         * A value that when nonblank causes AWS DMS to add a column with timestamp information to the endpoint data for an Amazon S3 target.\n         *\n         * > AWS DMS supports the `TimestampColumnName` parameter in versions 3.1.4 and later.\n         *\n         * DMS includes an additional `STRING` column in the .csv or .parquet object files of your migrated data when you set `TimestampColumnName` to a nonblank value.\n         *\n         * For a full load, each row of this timestamp column contains a timestamp for when the data was transferred from the source to the target by DMS.\n         *\n         * For a change data capture (CDC) load, each row of the timestamp column contains the timestamp for the commit of that row in the source database.\n         *\n         * The string format for this timestamp column value is `yyyy-MM-dd HH:mm:ss.SSSSSS` . By default, the precision of this value is in microseconds. For a CDC load, the rounding of the precision depends on the commit timestamp supported by DMS for the source database.\n         *\n         * When the `AddColumnName` parameter is set to `true` , DMS also includes a name for the timestamp column that you set with `TimestampColumnName` .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-timestampcolumnname\n         */\n        readonly timestampColumnName?: string;\n        /**\n         * This setting applies if the S3 output files during a change data capture (CDC) load are written in .csv format. If set to `true` for columns not included in the supplemental log, AWS DMS uses the value specified by [`CsvNoSupValue`](https://docs.aws.amazon.com/dms/latest/APIReference/API_S3Settings.html#DMS-Type-S3Settings-CsvNoSupValue) . If not set or set to `false` , AWS DMS uses the null value for these columns.\n         *\n         * > This setting is supported in AWS DMS versions 3.4.1 and later.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-usecsvnosupvalue\n         */\n        readonly useCsvNoSupValue?: boolean | cdk.IResolvable;\n        /**\n         * When set to true, this parameter uses the task start time as the timestamp column value instead of the time data is written to target. For full load, when `useTaskStartTimeForFullLoadTimestamp` is set to `true` , each row of the timestamp column contains the task start time. For CDC loads, each row of the timestamp column contains the transaction commit time.\n         *\n         * When `useTaskStartTimeForFullLoadTimestamp` is set to `false` , the full load timestamp in the timestamp column increments with the time data arrives at the target.\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-s3settings.html#cfn-dms-endpoint-s3settings-usetaskstarttimeforfullloadtimestamp\n         */\n        readonly useTaskStartTimeForFullLoadTimestamp?: boolean | cdk.IResolvable;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `S3SettingsProperty`\n *\n * @param properties - the TypeScript properties of a `S3SettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_S3SettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('addColumnName', cdk.validateBoolean)(properties.addColumnName));\n    errors.collect(cdk.propertyValidator('bucketFolder', cdk.validateString)(properties.bucketFolder));\n    errors.collect(cdk.propertyValidator('bucketName', cdk.validateString)(properties.bucketName));\n    errors.collect(cdk.propertyValidator('cannedAclForObjects', cdk.validateString)(properties.cannedAclForObjects));\n    errors.collect(cdk.propertyValidator('cdcInsertsAndUpdates', cdk.validateBoolean)(properties.cdcInsertsAndUpdates));\n    errors.collect(cdk.propertyValidator('cdcInsertsOnly', cdk.validateBoolean)(properties.cdcInsertsOnly));\n    errors.collect(cdk.propertyValidator('cdcMaxBatchInterval', cdk.validateNumber)(properties.cdcMaxBatchInterval));\n    errors.collect(cdk.propertyValidator('cdcMinFileSize', cdk.validateNumber)(properties.cdcMinFileSize));\n    errors.collect(cdk.propertyValidator('cdcPath', cdk.validateString)(properties.cdcPath));\n    errors.collect(cdk.propertyValidator('compressionType', cdk.validateString)(properties.compressionType));\n    errors.collect(cdk.propertyValidator('csvDelimiter', cdk.validateString)(properties.csvDelimiter));\n    errors.collect(cdk.propertyValidator('csvNoSupValue', cdk.validateString)(properties.csvNoSupValue));\n    errors.collect(cdk.propertyValidator('csvNullValue', cdk.validateString)(properties.csvNullValue));\n    errors.collect(cdk.propertyValidator('csvRowDelimiter', cdk.validateString)(properties.csvRowDelimiter));\n    errors.collect(cdk.propertyValidator('dataFormat', cdk.validateString)(properties.dataFormat));\n    errors.collect(cdk.propertyValidator('dataPageSize', cdk.validateNumber)(properties.dataPageSize));\n    errors.collect(cdk.propertyValidator('datePartitionDelimiter', cdk.validateString)(properties.datePartitionDelimiter));\n    errors.collect(cdk.propertyValidator('datePartitionEnabled', cdk.validateBoolean)(properties.datePartitionEnabled));\n    errors.collect(cdk.propertyValidator('datePartitionSequence', cdk.validateString)(properties.datePartitionSequence));\n    errors.collect(cdk.propertyValidator('datePartitionTimezone', cdk.validateString)(properties.datePartitionTimezone));\n    errors.collect(cdk.propertyValidator('dictPageSizeLimit', cdk.validateNumber)(properties.dictPageSizeLimit));\n    errors.collect(cdk.propertyValidator('enableStatistics', cdk.validateBoolean)(properties.enableStatistics));\n    errors.collect(cdk.propertyValidator('encodingType', cdk.validateString)(properties.encodingType));\n    errors.collect(cdk.propertyValidator('encryptionMode', cdk.validateString)(properties.encryptionMode));\n    errors.collect(cdk.propertyValidator('externalTableDefinition', cdk.validateString)(properties.externalTableDefinition));\n    errors.collect(cdk.propertyValidator('ignoreHeaderRows', cdk.validateNumber)(properties.ignoreHeaderRows));\n    errors.collect(cdk.propertyValidator('includeOpForFullLoad', cdk.validateBoolean)(properties.includeOpForFullLoad));\n    errors.collect(cdk.propertyValidator('maxFileSize', cdk.validateNumber)(properties.maxFileSize));\n    errors.collect(cdk.propertyValidator('parquetTimestampInMillisecond', cdk.validateBoolean)(properties.parquetTimestampInMillisecond));\n    errors.collect(cdk.propertyValidator('parquetVersion', cdk.validateString)(properties.parquetVersion));\n    errors.collect(cdk.propertyValidator('preserveTransactions', cdk.validateBoolean)(properties.preserveTransactions));\n    errors.collect(cdk.propertyValidator('rfc4180', cdk.validateBoolean)(properties.rfc4180));\n    errors.collect(cdk.propertyValidator('rowGroupLength', cdk.validateNumber)(properties.rowGroupLength));\n    errors.collect(cdk.propertyValidator('serverSideEncryptionKmsKeyId', cdk.validateString)(properties.serverSideEncryptionKmsKeyId));\n    errors.collect(cdk.propertyValidator('serviceAccessRoleArn', cdk.validateString)(properties.serviceAccessRoleArn));\n    errors.collect(cdk.propertyValidator('timestampColumnName', cdk.validateString)(properties.timestampColumnName));\n    errors.collect(cdk.propertyValidator('useCsvNoSupValue', cdk.validateBoolean)(properties.useCsvNoSupValue));\n    errors.collect(cdk.propertyValidator('useTaskStartTimeForFullLoadTimestamp', cdk.validateBoolean)(properties.useTaskStartTimeForFullLoadTimestamp));\n    return errors.wrap('supplied properties not correct for \"S3SettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.S3Settings` resource\n *\n * @param properties - the TypeScript properties of a `S3SettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.S3Settings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointS3SettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_S3SettingsPropertyValidator(properties).assertSuccess();\n    return {\n        AddColumnName: cdk.booleanToCloudFormation(properties.addColumnName),\n        BucketFolder: cdk.stringToCloudFormation(properties.bucketFolder),\n        BucketName: cdk.stringToCloudFormation(properties.bucketName),\n        CannedAclForObjects: cdk.stringToCloudFormation(properties.cannedAclForObjects),\n        CdcInsertsAndUpdates: cdk.booleanToCloudFormation(properties.cdcInsertsAndUpdates),\n        CdcInsertsOnly: cdk.booleanToCloudFormation(properties.cdcInsertsOnly),\n        CdcMaxBatchInterval: cdk.numberToCloudFormation(properties.cdcMaxBatchInterval),\n        CdcMinFileSize: cdk.numberToCloudFormation(properties.cdcMinFileSize),\n        CdcPath: cdk.stringToCloudFormation(properties.cdcPath),\n        CompressionType: cdk.stringToCloudFormation(properties.compressionType),\n        CsvDelimiter: cdk.stringToCloudFormation(properties.csvDelimiter),\n        CsvNoSupValue: cdk.stringToCloudFormation(properties.csvNoSupValue),\n        CsvNullValue: cdk.stringToCloudFormation(properties.csvNullValue),\n        CsvRowDelimiter: cdk.stringToCloudFormation(properties.csvRowDelimiter),\n        DataFormat: cdk.stringToCloudFormation(properties.dataFormat),\n        DataPageSize: cdk.numberToCloudFormation(properties.dataPageSize),\n        DatePartitionDelimiter: cdk.stringToCloudFormation(properties.datePartitionDelimiter),\n        DatePartitionEnabled: cdk.booleanToCloudFormation(properties.datePartitionEnabled),\n        DatePartitionSequence: cdk.stringToCloudFormation(properties.datePartitionSequence),\n        DatePartitionTimezone: cdk.stringToCloudFormation(properties.datePartitionTimezone),\n        DictPageSizeLimit: cdk.numberToCloudFormation(properties.dictPageSizeLimit),\n        EnableStatistics: cdk.booleanToCloudFormation(properties.enableStatistics),\n        EncodingType: cdk.stringToCloudFormation(properties.encodingType),\n        EncryptionMode: cdk.stringToCloudFormation(properties.encryptionMode),\n        ExternalTableDefinition: cdk.stringToCloudFormation(properties.externalTableDefinition),\n        IgnoreHeaderRows: cdk.numberToCloudFormation(properties.ignoreHeaderRows),\n        IncludeOpForFullLoad: cdk.booleanToCloudFormation(properties.includeOpForFullLoad),\n        MaxFileSize: cdk.numberToCloudFormation(properties.maxFileSize),\n        ParquetTimestampInMillisecond: cdk.booleanToCloudFormation(properties.parquetTimestampInMillisecond),\n        ParquetVersion: cdk.stringToCloudFormation(properties.parquetVersion),\n        PreserveTransactions: cdk.booleanToCloudFormation(properties.preserveTransactions),\n        Rfc4180: cdk.booleanToCloudFormation(properties.rfc4180),\n        RowGroupLength: cdk.numberToCloudFormation(properties.rowGroupLength),\n        ServerSideEncryptionKmsKeyId: cdk.stringToCloudFormation(properties.serverSideEncryptionKmsKeyId),\n        ServiceAccessRoleArn: cdk.stringToCloudFormation(properties.serviceAccessRoleArn),\n        TimestampColumnName: cdk.stringToCloudFormation(properties.timestampColumnName),\n        UseCsvNoSupValue: cdk.booleanToCloudFormation(properties.useCsvNoSupValue),\n        UseTaskStartTimeForFullLoadTimestamp: cdk.booleanToCloudFormation(properties.useTaskStartTimeForFullLoadTimestamp),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointS3SettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.S3SettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.S3SettingsProperty>();\n    ret.addPropertyResult('addColumnName', 'AddColumnName', properties.AddColumnName != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AddColumnName) : undefined);\n    ret.addPropertyResult('bucketFolder', 'BucketFolder', properties.BucketFolder != null ? cfn_parse.FromCloudFormation.getString(properties.BucketFolder) : undefined);\n    ret.addPropertyResult('bucketName', 'BucketName', properties.BucketName != null ? cfn_parse.FromCloudFormation.getString(properties.BucketName) : undefined);\n    ret.addPropertyResult('cannedAclForObjects', 'CannedAclForObjects', properties.CannedAclForObjects != null ? cfn_parse.FromCloudFormation.getString(properties.CannedAclForObjects) : undefined);\n    ret.addPropertyResult('cdcInsertsAndUpdates', 'CdcInsertsAndUpdates', properties.CdcInsertsAndUpdates != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CdcInsertsAndUpdates) : undefined);\n    ret.addPropertyResult('cdcInsertsOnly', 'CdcInsertsOnly', properties.CdcInsertsOnly != null ? cfn_parse.FromCloudFormation.getBoolean(properties.CdcInsertsOnly) : undefined);\n    ret.addPropertyResult('cdcMaxBatchInterval', 'CdcMaxBatchInterval', properties.CdcMaxBatchInterval != null ? cfn_parse.FromCloudFormation.getNumber(properties.CdcMaxBatchInterval) : undefined);\n    ret.addPropertyResult('cdcMinFileSize', 'CdcMinFileSize', properties.CdcMinFileSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.CdcMinFileSize) : undefined);\n    ret.addPropertyResult('cdcPath', 'CdcPath', properties.CdcPath != null ? cfn_parse.FromCloudFormation.getString(properties.CdcPath) : undefined);\n    ret.addPropertyResult('compressionType', 'CompressionType', properties.CompressionType != null ? cfn_parse.FromCloudFormation.getString(properties.CompressionType) : undefined);\n    ret.addPropertyResult('csvDelimiter', 'CsvDelimiter', properties.CsvDelimiter != null ? cfn_parse.FromCloudFormation.getString(properties.CsvDelimiter) : undefined);\n    ret.addPropertyResult('csvNoSupValue', 'CsvNoSupValue', properties.CsvNoSupValue != null ? cfn_parse.FromCloudFormation.getString(properties.CsvNoSupValue) : undefined);\n    ret.addPropertyResult('csvNullValue', 'CsvNullValue', properties.CsvNullValue != null ? cfn_parse.FromCloudFormation.getString(properties.CsvNullValue) : undefined);\n    ret.addPropertyResult('csvRowDelimiter', 'CsvRowDelimiter', properties.CsvRowDelimiter != null ? cfn_parse.FromCloudFormation.getString(properties.CsvRowDelimiter) : undefined);\n    ret.addPropertyResult('dataFormat', 'DataFormat', properties.DataFormat != null ? cfn_parse.FromCloudFormation.getString(properties.DataFormat) : undefined);\n    ret.addPropertyResult('dataPageSize', 'DataPageSize', properties.DataPageSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.DataPageSize) : undefined);\n    ret.addPropertyResult('datePartitionDelimiter', 'DatePartitionDelimiter', properties.DatePartitionDelimiter != null ? cfn_parse.FromCloudFormation.getString(properties.DatePartitionDelimiter) : undefined);\n    ret.addPropertyResult('datePartitionEnabled', 'DatePartitionEnabled', properties.DatePartitionEnabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.DatePartitionEnabled) : undefined);\n    ret.addPropertyResult('datePartitionSequence', 'DatePartitionSequence', properties.DatePartitionSequence != null ? cfn_parse.FromCloudFormation.getString(properties.DatePartitionSequence) : undefined);\n    ret.addPropertyResult('datePartitionTimezone', 'DatePartitionTimezone', properties.DatePartitionTimezone != null ? cfn_parse.FromCloudFormation.getString(properties.DatePartitionTimezone) : undefined);\n    ret.addPropertyResult('dictPageSizeLimit', 'DictPageSizeLimit', properties.DictPageSizeLimit != null ? cfn_parse.FromCloudFormation.getNumber(properties.DictPageSizeLimit) : undefined);\n    ret.addPropertyResult('enableStatistics', 'EnableStatistics', properties.EnableStatistics != null ? cfn_parse.FromCloudFormation.getBoolean(properties.EnableStatistics) : undefined);\n    ret.addPropertyResult('encodingType', 'EncodingType', properties.EncodingType != null ? cfn_parse.FromCloudFormation.getString(properties.EncodingType) : undefined);\n    ret.addPropertyResult('encryptionMode', 'EncryptionMode', properties.EncryptionMode != null ? cfn_parse.FromCloudFormation.getString(properties.EncryptionMode) : undefined);\n    ret.addPropertyResult('externalTableDefinition', 'ExternalTableDefinition', properties.ExternalTableDefinition != null ? cfn_parse.FromCloudFormation.getString(properties.ExternalTableDefinition) : undefined);\n    ret.addPropertyResult('ignoreHeaderRows', 'IgnoreHeaderRows', properties.IgnoreHeaderRows != null ? cfn_parse.FromCloudFormation.getNumber(properties.IgnoreHeaderRows) : undefined);\n    ret.addPropertyResult('includeOpForFullLoad', 'IncludeOpForFullLoad', properties.IncludeOpForFullLoad != null ? cfn_parse.FromCloudFormation.getBoolean(properties.IncludeOpForFullLoad) : undefined);\n    ret.addPropertyResult('maxFileSize', 'MaxFileSize', properties.MaxFileSize != null ? cfn_parse.FromCloudFormation.getNumber(properties.MaxFileSize) : undefined);\n    ret.addPropertyResult('parquetTimestampInMillisecond', 'ParquetTimestampInMillisecond', properties.ParquetTimestampInMillisecond != null ? cfn_parse.FromCloudFormation.getBoolean(properties.ParquetTimestampInMillisecond) : undefined);\n    ret.addPropertyResult('parquetVersion', 'ParquetVersion', properties.ParquetVersion != null ? cfn_parse.FromCloudFormation.getString(properties.ParquetVersion) : undefined);\n    ret.addPropertyResult('preserveTransactions', 'PreserveTransactions', properties.PreserveTransactions != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PreserveTransactions) : undefined);\n    ret.addPropertyResult('rfc4180', 'Rfc4180', properties.Rfc4180 != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Rfc4180) : undefined);\n    ret.addPropertyResult('rowGroupLength', 'RowGroupLength', properties.RowGroupLength != null ? cfn_parse.FromCloudFormation.getNumber(properties.RowGroupLength) : undefined);\n    ret.addPropertyResult('serverSideEncryptionKmsKeyId', 'ServerSideEncryptionKmsKeyId', properties.ServerSideEncryptionKmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.ServerSideEncryptionKmsKeyId) : undefined);\n    ret.addPropertyResult('serviceAccessRoleArn', 'ServiceAccessRoleArn', properties.ServiceAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.ServiceAccessRoleArn) : undefined);\n    ret.addPropertyResult('timestampColumnName', 'TimestampColumnName', properties.TimestampColumnName != null ? cfn_parse.FromCloudFormation.getString(properties.TimestampColumnName) : undefined);\n    ret.addPropertyResult('useCsvNoSupValue', 'UseCsvNoSupValue', properties.UseCsvNoSupValue != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseCsvNoSupValue) : undefined);\n    ret.addPropertyResult('useTaskStartTimeForFullLoadTimestamp', 'UseTaskStartTimeForFullLoadTimestamp', properties.UseTaskStartTimeForFullLoadTimestamp != null ? cfn_parse.FromCloudFormation.getBoolean(properties.UseTaskStartTimeForFullLoadTimestamp) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\nexport namespace CfnEndpoint {\n    /**\n     * Not currently supported by AWS CloudFormation .\n     *\n     * @struct\n     * @stability external\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-sybasesettings.html\n     */\n    export interface SybaseSettingsProperty {\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-sybasesettings.html#cfn-dms-endpoint-sybasesettings-secretsmanageraccessrolearn\n         */\n        readonly secretsManagerAccessRoleArn?: string;\n        /**\n         * Not currently supported by AWS CloudFormation .\n         *\n         * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-dms-endpoint-sybasesettings.html#cfn-dms-endpoint-sybasesettings-secretsmanagersecretid\n         */\n        readonly secretsManagerSecretId?: string;\n    }\n}\n\n/**\n * Determine whether the given properties match those of a `SybaseSettingsProperty`\n *\n * @param properties - the TypeScript properties of a `SybaseSettingsProperty`\n *\n * @returns the result of the validation.\n */\nfunction CfnEndpoint_SybaseSettingsPropertyValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('secretsManagerAccessRoleArn', cdk.validateString)(properties.secretsManagerAccessRoleArn));\n    errors.collect(cdk.propertyValidator('secretsManagerSecretId', cdk.validateString)(properties.secretsManagerSecretId));\n    return errors.wrap('supplied properties not correct for \"SybaseSettingsProperty\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::Endpoint.SybaseSettings` resource\n *\n * @param properties - the TypeScript properties of a `SybaseSettingsProperty`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::Endpoint.SybaseSettings` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEndpointSybaseSettingsPropertyToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEndpoint_SybaseSettingsPropertyValidator(properties).assertSuccess();\n    return {\n        SecretsManagerAccessRoleArn: cdk.stringToCloudFormation(properties.secretsManagerAccessRoleArn),\n        SecretsManagerSecretId: cdk.stringToCloudFormation(properties.secretsManagerSecretId),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEndpointSybaseSettingsPropertyFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEndpoint.SybaseSettingsProperty | cdk.IResolvable> {\n    if (cdk.isResolvableObject(properties)) {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEndpoint.SybaseSettingsProperty>();\n    ret.addPropertyResult('secretsManagerAccessRoleArn', 'SecretsManagerAccessRoleArn', properties.SecretsManagerAccessRoleArn != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerAccessRoleArn) : undefined);\n    ret.addPropertyResult('secretsManagerSecretId', 'SecretsManagerSecretId', properties.SecretsManagerSecretId != null ? cfn_parse.FromCloudFormation.getString(properties.SecretsManagerSecretId) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * Properties for defining a `CfnEventSubscription`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html\n */\nexport interface CfnEventSubscriptionProps {\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-snstopicarn\n     */\n    readonly snsTopicArn: string;\n\n    /**\n     * Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-enabled\n     */\n    readonly enabled?: boolean | cdk.IResolvable;\n\n    /**\n     * A list of event categories for a source type that you want to subscribe to. If you don't specify this property, you are notified about all event categories. For more information, see [Working with Events and Notifications](https://docs.aws.amazon.com//dms/latest/userguide/CHAP_Events.html) in the *AWS DMS User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-eventcategories\n     */\n    readonly eventCategories?: string[];\n\n    /**\n     * A list of identifiers for which AWS DMS provides notification events.\n     *\n     * If you don't specify a value, notifications are provided for all sources.\n     *\n     * If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-sourceids\n     */\n    readonly sourceIds?: string[];\n\n    /**\n     * The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to `replication-instance` . If this value isn't specified, all events are returned.\n     *\n     * Valid values: `replication-instance` | `replication-task`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-sourcetype\n     */\n    readonly sourceType?: string;\n\n    /**\n     * The name of the AWS DMS event notification subscription. This name must be less than 255 characters.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-subscriptionname\n     */\n    readonly subscriptionName?: string;\n\n    /**\n     * One or more tags to be assigned to the event subscription.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnEventSubscriptionProps`\n *\n * @param properties - the TypeScript properties of a `CfnEventSubscriptionProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnEventSubscriptionPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('enabled', cdk.validateBoolean)(properties.enabled));\n    errors.collect(cdk.propertyValidator('eventCategories', cdk.listValidator(cdk.validateString))(properties.eventCategories));\n    errors.collect(cdk.propertyValidator('snsTopicArn', cdk.requiredValidator)(properties.snsTopicArn));\n    errors.collect(cdk.propertyValidator('snsTopicArn', cdk.validateString)(properties.snsTopicArn));\n    errors.collect(cdk.propertyValidator('sourceIds', cdk.listValidator(cdk.validateString))(properties.sourceIds));\n    errors.collect(cdk.propertyValidator('sourceType', cdk.validateString)(properties.sourceType));\n    errors.collect(cdk.propertyValidator('subscriptionName', cdk.validateString)(properties.subscriptionName));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnEventSubscriptionProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::EventSubscription` resource\n *\n * @param properties - the TypeScript properties of a `CfnEventSubscriptionProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::EventSubscription` resource.\n */\n// @ts-ignore TS6133\nfunction cfnEventSubscriptionPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnEventSubscriptionPropsValidator(properties).assertSuccess();\n    return {\n        SnsTopicArn: cdk.stringToCloudFormation(properties.snsTopicArn),\n        Enabled: cdk.booleanToCloudFormation(properties.enabled),\n        EventCategories: cdk.listMapper(cdk.stringToCloudFormation)(properties.eventCategories),\n        SourceIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.sourceIds),\n        SourceType: cdk.stringToCloudFormation(properties.sourceType),\n        SubscriptionName: cdk.stringToCloudFormation(properties.subscriptionName),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnEventSubscriptionPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnEventSubscriptionProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnEventSubscriptionProps>();\n    ret.addPropertyResult('snsTopicArn', 'SnsTopicArn', cfn_parse.FromCloudFormation.getString(properties.SnsTopicArn));\n    ret.addPropertyResult('enabled', 'Enabled', properties.Enabled != null ? cfn_parse.FromCloudFormation.getBoolean(properties.Enabled) : undefined);\n    ret.addPropertyResult('eventCategories', 'EventCategories', properties.EventCategories != null ? cfn_parse.FromCloudFormation.getStringArray(properties.EventCategories) : undefined);\n    ret.addPropertyResult('sourceIds', 'SourceIds', properties.SourceIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.SourceIds) : undefined);\n    ret.addPropertyResult('sourceType', 'SourceType', properties.SourceType != null ? cfn_parse.FromCloudFormation.getString(properties.SourceType) : undefined);\n    ret.addPropertyResult('subscriptionName', 'SubscriptionName', properties.SubscriptionName != null ? cfn_parse.FromCloudFormation.getString(properties.SubscriptionName) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DMS::EventSubscription`\n *\n * Use the `AWS::DMS::EventSubscription` resource to get notifications for AWS Database Migration Service events through the Amazon Simple Notification Service. For more information, see [Using AWS DMS Event Notification](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Events.html) in the *AWS Database Migration Service User Guide.*\n *\n * @cloudformationResource AWS::DMS::EventSubscription\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html\n */\nexport class CfnEventSubscription extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DMS::EventSubscription\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnEventSubscription {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnEventSubscriptionPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnEventSubscription(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The Amazon Resource Name (ARN) of the Amazon SNS topic created for event notification. The ARN is created by Amazon SNS when you create a topic and subscribe to it.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-snstopicarn\n     */\n    public snsTopicArn: string;\n\n    /**\n     * Indicates whether to activate the subscription. If you don't specify this property, AWS CloudFormation activates the subscription.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-enabled\n     */\n    public enabled: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * A list of event categories for a source type that you want to subscribe to. If you don't specify this property, you are notified about all event categories. For more information, see [Working with Events and Notifications](https://docs.aws.amazon.com//dms/latest/userguide/CHAP_Events.html) in the *AWS DMS User Guide* .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-eventcategories\n     */\n    public eventCategories: string[] | undefined;\n\n    /**\n     * A list of identifiers for which AWS DMS provides notification events.\n     *\n     * If you don't specify a value, notifications are provided for all sources.\n     *\n     * If you specify multiple values, they must be of the same type. For example, if you specify a database instance ID, then all of the other values must be database instance IDs.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-sourceids\n     */\n    public sourceIds: string[] | undefined;\n\n    /**\n     * The type of AWS DMS resource that generates the events. For example, if you want to be notified of events generated by a replication instance, you set this parameter to `replication-instance` . If this value isn't specified, all events are returned.\n     *\n     * Valid values: `replication-instance` | `replication-task`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-sourcetype\n     */\n    public sourceType: string | undefined;\n\n    /**\n     * The name of the AWS DMS event notification subscription. This name must be less than 255 characters.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-subscriptionname\n     */\n    public subscriptionName: string | undefined;\n\n    /**\n     * One or more tags to be assigned to the event subscription.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-eventsubscription.html#cfn-dms-eventsubscription-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::DMS::EventSubscription`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnEventSubscriptionProps) {\n        super(scope, id, { type: CfnEventSubscription.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'snsTopicArn', this);\n\n        this.snsTopicArn = props.snsTopicArn;\n        this.enabled = props.enabled;\n        this.eventCategories = props.eventCategories;\n        this.sourceIds = props.sourceIds;\n        this.sourceType = props.sourceType;\n        this.subscriptionName = props.subscriptionName;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::DMS::EventSubscription\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnEventSubscription.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            snsTopicArn: this.snsTopicArn,\n            enabled: this.enabled,\n            eventCategories: this.eventCategories,\n            sourceIds: this.sourceIds,\n            sourceType: this.sourceType,\n            subscriptionName: this.subscriptionName,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnEventSubscriptionPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnReplicationInstance`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html\n */\nexport interface CfnReplicationInstanceProps {\n\n    /**\n     * The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example to specify the instance class dms.c4.large, set this parameter to `\"dms.c4.large\"` .\n     *\n     * For more information on the settings and capacities for the available replication instance classes, see [Selecting the right AWS DMS replication instance for your migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationinstanceclass\n     */\n    readonly replicationInstanceClass: string;\n\n    /**\n     * The amount of storage (in gigabytes) to be initially allocated for the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-allocatedstorage\n     */\n    readonly allocatedStorage?: number;\n\n    /**\n     * Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is asynchronously applied as soon as possible.\n     *\n     * This parameter must be set to `true` when specifying a value for the `EngineVersion` parameter that is a different major version than the replication instance's current version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-allowmajorversionupgrade\n     */\n    readonly allowMajorVersionUpgrade?: boolean | cdk.IResolvable;\n\n    /**\n     * A value that indicates whether minor engine upgrades are applied automatically to the replication instance during the maintenance window. This parameter defaults to `true` .\n     *\n     * Default: `true`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-autominorversionupgrade\n     */\n    readonly autoMinorVersionUpgrade?: boolean | cdk.IResolvable;\n\n    /**\n     * The Availability Zone that the replication instance will be created in.\n     *\n     * The default value is a random, system-chosen Availability Zone in the endpoint's AWS Region , for example: `us-east-1d`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-availabilityzone\n     */\n    readonly availabilityZone?: string;\n\n    /**\n     * The engine version number of the replication instance.\n     *\n     * If an engine version number is not specified when a replication instance is created, the default is the latest engine version available.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-engineversion\n     */\n    readonly engineVersion?: string;\n\n    /**\n     * An AWS KMS key identifier that is used to encrypt the data on the replication instance.\n     *\n     * If you don't specify a value for the `KmsKeyId` parameter, then AWS DMS uses your default encryption key.\n     *\n     * AWS KMS creates the default encryption key for your AWS account . Your AWS account has a different default encryption key for each AWS Region .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-kmskeyid\n     */\n    readonly kmsKeyId?: string;\n\n    /**\n     * Specifies whether the replication instance is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the Multi-AZ parameter is set to `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-multiaz\n     */\n    readonly multiAz?: boolean | cdk.IResolvable;\n\n    /**\n     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\n     *\n     * Format: `ddd:hh24:mi-ddd:hh24:mi`\n     *\n     * Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region , occurring on a random day of the week.\n     *\n     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun\n     *\n     * Constraints: Minimum 30-minute window.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-preferredmaintenancewindow\n     */\n    readonly preferredMaintenanceWindow?: string;\n\n    /**\n     * Specifies the accessibility options for the replication instance. A value of `true` represents an instance with a public IP address. A value of `false` represents an instance with a private IP address. The default value is `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-publiclyaccessible\n     */\n    readonly publiclyAccessible?: boolean | cdk.IResolvable;\n\n    /**\n     * The replication instance identifier. This parameter is stored as a lowercase string.\n     *\n     * Constraints:\n     *\n     * - Must contain 1-63 alphanumeric characters or hyphens.\n     * - First character must be a letter.\n     * - Can't end with a hyphen or contain two consecutive hyphens.\n     *\n     * Example: `myrepinstance`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationinstanceidentifier\n     */\n    readonly replicationInstanceIdentifier?: string;\n\n    /**\n     * A subnet group to associate with the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationsubnetgroupidentifier\n     */\n    readonly replicationSubnetGroupIdentifier?: string;\n\n    /**\n     * A friendly name for the resource identifier at the end of the `EndpointArn` response parameter that is returned in the created `Endpoint` object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as `Example-App-ARN1` . For example, this value might result in the `EndpointArn` value `arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1` . If you don't specify a `ResourceIdentifier` value, AWS DMS generates a default identifier value for the end of `EndpointArn` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-resourceidentifier\n     */\n    readonly resourceIdentifier?: string;\n\n    /**\n     * One or more tags to be assigned to the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-vpcsecuritygroupids\n     */\n    readonly vpcSecurityGroupIds?: string[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnReplicationInstanceProps`\n *\n * @param properties - the TypeScript properties of a `CfnReplicationInstanceProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnReplicationInstancePropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('allocatedStorage', cdk.validateNumber)(properties.allocatedStorage));\n    errors.collect(cdk.propertyValidator('allowMajorVersionUpgrade', cdk.validateBoolean)(properties.allowMajorVersionUpgrade));\n    errors.collect(cdk.propertyValidator('autoMinorVersionUpgrade', cdk.validateBoolean)(properties.autoMinorVersionUpgrade));\n    errors.collect(cdk.propertyValidator('availabilityZone', cdk.validateString)(properties.availabilityZone));\n    errors.collect(cdk.propertyValidator('engineVersion', cdk.validateString)(properties.engineVersion));\n    errors.collect(cdk.propertyValidator('kmsKeyId', cdk.validateString)(properties.kmsKeyId));\n    errors.collect(cdk.propertyValidator('multiAz', cdk.validateBoolean)(properties.multiAz));\n    errors.collect(cdk.propertyValidator('preferredMaintenanceWindow', cdk.validateString)(properties.preferredMaintenanceWindow));\n    errors.collect(cdk.propertyValidator('publiclyAccessible', cdk.validateBoolean)(properties.publiclyAccessible));\n    errors.collect(cdk.propertyValidator('replicationInstanceClass', cdk.requiredValidator)(properties.replicationInstanceClass));\n    errors.collect(cdk.propertyValidator('replicationInstanceClass', cdk.validateString)(properties.replicationInstanceClass));\n    errors.collect(cdk.propertyValidator('replicationInstanceIdentifier', cdk.validateString)(properties.replicationInstanceIdentifier));\n    errors.collect(cdk.propertyValidator('replicationSubnetGroupIdentifier', cdk.validateString)(properties.replicationSubnetGroupIdentifier));\n    errors.collect(cdk.propertyValidator('resourceIdentifier', cdk.validateString)(properties.resourceIdentifier));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('vpcSecurityGroupIds', cdk.listValidator(cdk.validateString))(properties.vpcSecurityGroupIds));\n    return errors.wrap('supplied properties not correct for \"CfnReplicationInstanceProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::ReplicationInstance` resource\n *\n * @param properties - the TypeScript properties of a `CfnReplicationInstanceProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::ReplicationInstance` resource.\n */\n// @ts-ignore TS6133\nfunction cfnReplicationInstancePropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnReplicationInstancePropsValidator(properties).assertSuccess();\n    return {\n        ReplicationInstanceClass: cdk.stringToCloudFormation(properties.replicationInstanceClass),\n        AllocatedStorage: cdk.numberToCloudFormation(properties.allocatedStorage),\n        AllowMajorVersionUpgrade: cdk.booleanToCloudFormation(properties.allowMajorVersionUpgrade),\n        AutoMinorVersionUpgrade: cdk.booleanToCloudFormation(properties.autoMinorVersionUpgrade),\n        AvailabilityZone: cdk.stringToCloudFormation(properties.availabilityZone),\n        EngineVersion: cdk.stringToCloudFormation(properties.engineVersion),\n        KmsKeyId: cdk.stringToCloudFormation(properties.kmsKeyId),\n        MultiAZ: cdk.booleanToCloudFormation(properties.multiAz),\n        PreferredMaintenanceWindow: cdk.stringToCloudFormation(properties.preferredMaintenanceWindow),\n        PubliclyAccessible: cdk.booleanToCloudFormation(properties.publiclyAccessible),\n        ReplicationInstanceIdentifier: cdk.stringToCloudFormation(properties.replicationInstanceIdentifier),\n        ReplicationSubnetGroupIdentifier: cdk.stringToCloudFormation(properties.replicationSubnetGroupIdentifier),\n        ResourceIdentifier: cdk.stringToCloudFormation(properties.resourceIdentifier),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        VpcSecurityGroupIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.vpcSecurityGroupIds),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnReplicationInstancePropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnReplicationInstanceProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnReplicationInstanceProps>();\n    ret.addPropertyResult('replicationInstanceClass', 'ReplicationInstanceClass', cfn_parse.FromCloudFormation.getString(properties.ReplicationInstanceClass));\n    ret.addPropertyResult('allocatedStorage', 'AllocatedStorage', properties.AllocatedStorage != null ? cfn_parse.FromCloudFormation.getNumber(properties.AllocatedStorage) : undefined);\n    ret.addPropertyResult('allowMajorVersionUpgrade', 'AllowMajorVersionUpgrade', properties.AllowMajorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AllowMajorVersionUpgrade) : undefined);\n    ret.addPropertyResult('autoMinorVersionUpgrade', 'AutoMinorVersionUpgrade', properties.AutoMinorVersionUpgrade != null ? cfn_parse.FromCloudFormation.getBoolean(properties.AutoMinorVersionUpgrade) : undefined);\n    ret.addPropertyResult('availabilityZone', 'AvailabilityZone', properties.AvailabilityZone != null ? cfn_parse.FromCloudFormation.getString(properties.AvailabilityZone) : undefined);\n    ret.addPropertyResult('engineVersion', 'EngineVersion', properties.EngineVersion != null ? cfn_parse.FromCloudFormation.getString(properties.EngineVersion) : undefined);\n    ret.addPropertyResult('kmsKeyId', 'KmsKeyId', properties.KmsKeyId != null ? cfn_parse.FromCloudFormation.getString(properties.KmsKeyId) : undefined);\n    ret.addPropertyResult('multiAz', 'MultiAZ', properties.MultiAZ != null ? cfn_parse.FromCloudFormation.getBoolean(properties.MultiAZ) : undefined);\n    ret.addPropertyResult('preferredMaintenanceWindow', 'PreferredMaintenanceWindow', properties.PreferredMaintenanceWindow != null ? cfn_parse.FromCloudFormation.getString(properties.PreferredMaintenanceWindow) : undefined);\n    ret.addPropertyResult('publiclyAccessible', 'PubliclyAccessible', properties.PubliclyAccessible != null ? cfn_parse.FromCloudFormation.getBoolean(properties.PubliclyAccessible) : undefined);\n    ret.addPropertyResult('replicationInstanceIdentifier', 'ReplicationInstanceIdentifier', properties.ReplicationInstanceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationInstanceIdentifier) : undefined);\n    ret.addPropertyResult('replicationSubnetGroupIdentifier', 'ReplicationSubnetGroupIdentifier', properties.ReplicationSubnetGroupIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupIdentifier) : undefined);\n    ret.addPropertyResult('resourceIdentifier', 'ResourceIdentifier', properties.ResourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('vpcSecurityGroupIds', 'VpcSecurityGroupIds', properties.VpcSecurityGroupIds != null ? cfn_parse.FromCloudFormation.getStringArray(properties.VpcSecurityGroupIds) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DMS::ReplicationInstance`\n *\n * The `AWS::DMS::ReplicationInstance` resource creates an AWS DMS replication instance.\n *\n * @cloudformationResource AWS::DMS::ReplicationInstance\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html\n */\nexport class CfnReplicationInstance extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DMS::ReplicationInstance\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnReplicationInstance {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnReplicationInstancePropsFromCloudFormation(resourceProperties);\n        const ret = new CfnReplicationInstance(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * One or more private IP addresses for the replication instance.\n     * @cloudformationAttribute ReplicationInstancePrivateIpAddresses\n     */\n    public readonly attrReplicationInstancePrivateIpAddresses: string[];\n\n    /**\n     * One or more public IP addresses for the replication instance.\n     * @cloudformationAttribute ReplicationInstancePublicIpAddresses\n     */\n    public readonly attrReplicationInstancePublicIpAddresses: string[];\n\n    /**\n     * The compute and memory capacity of the replication instance as defined for the specified replication instance class. For example to specify the instance class dms.c4.large, set this parameter to `\"dms.c4.large\"` .\n     *\n     * For more information on the settings and capacities for the available replication instance classes, see [Selecting the right AWS DMS replication instance for your migration](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.InDepth) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationinstanceclass\n     */\n    public replicationInstanceClass: string;\n\n    /**\n     * The amount of storage (in gigabytes) to be initially allocated for the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-allocatedstorage\n     */\n    public allocatedStorage: number | undefined;\n\n    /**\n     * Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage, and the change is asynchronously applied as soon as possible.\n     *\n     * This parameter must be set to `true` when specifying a value for the `EngineVersion` parameter that is a different major version than the replication instance's current version.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-allowmajorversionupgrade\n     */\n    public allowMajorVersionUpgrade: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * A value that indicates whether minor engine upgrades are applied automatically to the replication instance during the maintenance window. This parameter defaults to `true` .\n     *\n     * Default: `true`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-autominorversionupgrade\n     */\n    public autoMinorVersionUpgrade: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The Availability Zone that the replication instance will be created in.\n     *\n     * The default value is a random, system-chosen Availability Zone in the endpoint's AWS Region , for example: `us-east-1d`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-availabilityzone\n     */\n    public availabilityZone: string | undefined;\n\n    /**\n     * The engine version number of the replication instance.\n     *\n     * If an engine version number is not specified when a replication instance is created, the default is the latest engine version available.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-engineversion\n     */\n    public engineVersion: string | undefined;\n\n    /**\n     * An AWS KMS key identifier that is used to encrypt the data on the replication instance.\n     *\n     * If you don't specify a value for the `KmsKeyId` parameter, then AWS DMS uses your default encryption key.\n     *\n     * AWS KMS creates the default encryption key for your AWS account . Your AWS account has a different default encryption key for each AWS Region .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-kmskeyid\n     */\n    public kmsKeyId: string | undefined;\n\n    /**\n     * Specifies whether the replication instance is a Multi-AZ deployment. You can't set the `AvailabilityZone` parameter if the Multi-AZ parameter is set to `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-multiaz\n     */\n    public multiAz: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The weekly time range during which system maintenance can occur, in Universal Coordinated Time (UTC).\n     *\n     * Format: `ddd:hh24:mi-ddd:hh24:mi`\n     *\n     * Default: A 30-minute window selected at random from an 8-hour block of time per AWS Region , occurring on a random day of the week.\n     *\n     * Valid Days: Mon, Tue, Wed, Thu, Fri, Sat, Sun\n     *\n     * Constraints: Minimum 30-minute window.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-preferredmaintenancewindow\n     */\n    public preferredMaintenanceWindow: string | undefined;\n\n    /**\n     * Specifies the accessibility options for the replication instance. A value of `true` represents an instance with a public IP address. A value of `false` represents an instance with a private IP address. The default value is `true` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-publiclyaccessible\n     */\n    public publiclyAccessible: boolean | cdk.IResolvable | undefined;\n\n    /**\n     * The replication instance identifier. This parameter is stored as a lowercase string.\n     *\n     * Constraints:\n     *\n     * - Must contain 1-63 alphanumeric characters or hyphens.\n     * - First character must be a letter.\n     * - Can't end with a hyphen or contain two consecutive hyphens.\n     *\n     * Example: `myrepinstance`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationinstanceidentifier\n     */\n    public replicationInstanceIdentifier: string | undefined;\n\n    /**\n     * A subnet group to associate with the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-replicationsubnetgroupidentifier\n     */\n    public replicationSubnetGroupIdentifier: string | undefined;\n\n    /**\n     * A friendly name for the resource identifier at the end of the `EndpointArn` response parameter that is returned in the created `Endpoint` object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as `Example-App-ARN1` . For example, this value might result in the `EndpointArn` value `arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1` . If you don't specify a `ResourceIdentifier` value, AWS DMS generates a default identifier value for the end of `EndpointArn` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-resourceidentifier\n     */\n    public resourceIdentifier: string | undefined;\n\n    /**\n     * One or more tags to be assigned to the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Specifies the VPC security group to be used with the replication instance. The VPC security group must work with the VPC containing the replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationinstance.html#cfn-dms-replicationinstance-vpcsecuritygroupids\n     */\n    public vpcSecurityGroupIds: string[] | undefined;\n\n    /**\n     * Create a new `AWS::DMS::ReplicationInstance`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnReplicationInstanceProps) {\n        super(scope, id, { type: CfnReplicationInstance.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'replicationInstanceClass', this);\n        this.attrReplicationInstancePrivateIpAddresses = cdk.Token.asList(this.getAtt('ReplicationInstancePrivateIpAddresses'));\n        this.attrReplicationInstancePublicIpAddresses = cdk.Token.asList(this.getAtt('ReplicationInstancePublicIpAddresses'));\n\n        this.replicationInstanceClass = props.replicationInstanceClass;\n        this.allocatedStorage = props.allocatedStorage;\n        this.allowMajorVersionUpgrade = props.allowMajorVersionUpgrade;\n        this.autoMinorVersionUpgrade = props.autoMinorVersionUpgrade;\n        this.availabilityZone = props.availabilityZone;\n        this.engineVersion = props.engineVersion;\n        this.kmsKeyId = props.kmsKeyId;\n        this.multiAz = props.multiAz;\n        this.preferredMaintenanceWindow = props.preferredMaintenanceWindow;\n        this.publiclyAccessible = props.publiclyAccessible;\n        this.replicationInstanceIdentifier = props.replicationInstanceIdentifier;\n        this.replicationSubnetGroupIdentifier = props.replicationSubnetGroupIdentifier;\n        this.resourceIdentifier = props.resourceIdentifier;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::DMS::ReplicationInstance\", props.tags, { tagPropertyName: 'tags' });\n        this.vpcSecurityGroupIds = props.vpcSecurityGroupIds;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnReplicationInstance.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            replicationInstanceClass: this.replicationInstanceClass,\n            allocatedStorage: this.allocatedStorage,\n            allowMajorVersionUpgrade: this.allowMajorVersionUpgrade,\n            autoMinorVersionUpgrade: this.autoMinorVersionUpgrade,\n            availabilityZone: this.availabilityZone,\n            engineVersion: this.engineVersion,\n            kmsKeyId: this.kmsKeyId,\n            multiAz: this.multiAz,\n            preferredMaintenanceWindow: this.preferredMaintenanceWindow,\n            publiclyAccessible: this.publiclyAccessible,\n            replicationInstanceIdentifier: this.replicationInstanceIdentifier,\n            replicationSubnetGroupIdentifier: this.replicationSubnetGroupIdentifier,\n            resourceIdentifier: this.resourceIdentifier,\n            tags: this.tags.renderTags(),\n            vpcSecurityGroupIds: this.vpcSecurityGroupIds,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnReplicationInstancePropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnReplicationSubnetGroup`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html\n */\nexport interface CfnReplicationSubnetGroupProps {\n\n    /**\n     * The description for the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-replicationsubnetgroupdescription\n     */\n    readonly replicationSubnetGroupDescription: string;\n\n    /**\n     * One or more subnet IDs to be assigned to the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-subnetids\n     */\n    readonly subnetIds: string[];\n\n    /**\n     * The identifier for the replication subnet group. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the identifier.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-replicationsubnetgroupidentifier\n     */\n    readonly replicationSubnetGroupIdentifier?: string;\n\n    /**\n     * One or more tags to be assigned to the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n}\n\n/**\n * Determine whether the given properties match those of a `CfnReplicationSubnetGroupProps`\n *\n * @param properties - the TypeScript properties of a `CfnReplicationSubnetGroupProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnReplicationSubnetGroupPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('replicationSubnetGroupDescription', cdk.requiredValidator)(properties.replicationSubnetGroupDescription));\n    errors.collect(cdk.propertyValidator('replicationSubnetGroupDescription', cdk.validateString)(properties.replicationSubnetGroupDescription));\n    errors.collect(cdk.propertyValidator('replicationSubnetGroupIdentifier', cdk.validateString)(properties.replicationSubnetGroupIdentifier));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.requiredValidator)(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('subnetIds', cdk.listValidator(cdk.validateString))(properties.subnetIds));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    return errors.wrap('supplied properties not correct for \"CfnReplicationSubnetGroupProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::ReplicationSubnetGroup` resource\n *\n * @param properties - the TypeScript properties of a `CfnReplicationSubnetGroupProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::ReplicationSubnetGroup` resource.\n */\n// @ts-ignore TS6133\nfunction cfnReplicationSubnetGroupPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnReplicationSubnetGroupPropsValidator(properties).assertSuccess();\n    return {\n        ReplicationSubnetGroupDescription: cdk.stringToCloudFormation(properties.replicationSubnetGroupDescription),\n        SubnetIds: cdk.listMapper(cdk.stringToCloudFormation)(properties.subnetIds),\n        ReplicationSubnetGroupIdentifier: cdk.stringToCloudFormation(properties.replicationSubnetGroupIdentifier),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnReplicationSubnetGroupPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnReplicationSubnetGroupProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnReplicationSubnetGroupProps>();\n    ret.addPropertyResult('replicationSubnetGroupDescription', 'ReplicationSubnetGroupDescription', cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupDescription));\n    ret.addPropertyResult('subnetIds', 'SubnetIds', cfn_parse.FromCloudFormation.getStringArray(properties.SubnetIds));\n    ret.addPropertyResult('replicationSubnetGroupIdentifier', 'ReplicationSubnetGroupIdentifier', properties.ReplicationSubnetGroupIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationSubnetGroupIdentifier) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DMS::ReplicationSubnetGroup`\n *\n * The `AWS::DMS::ReplicationSubnetGroup` resource creates an AWS DMS replication subnet group. Subnet groups must contain at least two subnets in two different Availability Zones in the same region.\n *\n * > Resource creation will fail if the `dms-vpc-role` IAM role doesn't already exist. For more information, see [Creating the IAM Roles to Use With the AWS CLI and AWS DMS API](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Security.APIRole.html) in the *AWS Database Migration Service User Guide.*\n *\n * @cloudformationResource AWS::DMS::ReplicationSubnetGroup\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html\n */\nexport class CfnReplicationSubnetGroup extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DMS::ReplicationSubnetGroup\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnReplicationSubnetGroup {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnReplicationSubnetGroupPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnReplicationSubnetGroup(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The description for the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-replicationsubnetgroupdescription\n     */\n    public replicationSubnetGroupDescription: string;\n\n    /**\n     * One or more subnet IDs to be assigned to the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-subnetids\n     */\n    public subnetIds: string[];\n\n    /**\n     * The identifier for the replication subnet group. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the identifier.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-replicationsubnetgroupidentifier\n     */\n    public replicationSubnetGroupIdentifier: string | undefined;\n\n    /**\n     * One or more tags to be assigned to the subnet group.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationsubnetgroup.html#cfn-dms-replicationsubnetgroup-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * Create a new `AWS::DMS::ReplicationSubnetGroup`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnReplicationSubnetGroupProps) {\n        super(scope, id, { type: CfnReplicationSubnetGroup.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'replicationSubnetGroupDescription', this);\n        cdk.requireProperty(props, 'subnetIds', this);\n\n        this.replicationSubnetGroupDescription = props.replicationSubnetGroupDescription;\n        this.subnetIds = props.subnetIds;\n        this.replicationSubnetGroupIdentifier = props.replicationSubnetGroupIdentifier;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::DMS::ReplicationSubnetGroup\", props.tags, { tagPropertyName: 'tags' });\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnReplicationSubnetGroup.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            replicationSubnetGroupDescription: this.replicationSubnetGroupDescription,\n            subnetIds: this.subnetIds,\n            replicationSubnetGroupIdentifier: this.replicationSubnetGroupIdentifier,\n            tags: this.tags.renderTags(),\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnReplicationSubnetGroupPropsToCloudFormation(props);\n    }\n}\n\n/**\n * Properties for defining a `CfnReplicationTask`\n *\n * @struct\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html\n */\nexport interface CfnReplicationTaskProps {\n\n    /**\n     * The migration type. Valid values: `full-load` | `cdc` | `full-load-and-cdc`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-migrationtype\n     */\n    readonly migrationType: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of a replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationinstancearn\n     */\n    readonly replicationInstanceArn: string;\n\n    /**\n     * An Amazon Resource Name (ARN) that uniquely identifies the source endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-sourceendpointarn\n     */\n    readonly sourceEndpointArn: string;\n\n    /**\n     * The table mappings for the task, in JSON format. For more information, see [Using Table Mapping to Specify Task Settings](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-tablemappings\n     */\n    readonly tableMappings: string;\n\n    /**\n     * An Amazon Resource Name (ARN) that uniquely identifies the target endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-targetendpointarn\n     */\n    readonly targetEndpointArn: string;\n\n    /**\n     * Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.\n     *\n     * The value can be in date, checkpoint, or LSN/SCN format.\n     *\n     * Date Example: --cdc-start-position \u201C2018-03-08T12:12:12\u201D\n     *\n     * Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"\n     *\n     * LSN Example: --cdc-start-position \u201Cmysql-bin-changelog.000024:373\u201D\n     *\n     * > When you use this task setting with a source PostgreSQL database, a logical replication slot should already be created and associated with the source endpoint. You can verify this by setting the `slotName` extra connection attribute to the name of this logical replication slot. For more information, see [Extra Connection Attributes When Using PostgreSQL as a Source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstartposition\n     */\n    readonly cdcStartPosition?: string;\n\n    /**\n     * Indicates the start time for a change data capture (CDC) operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstarttime\n     */\n    readonly cdcStartTime?: number;\n\n    /**\n     * Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.\n     *\n     * Server time example: --cdc-stop-position \u201Cserver_time:2018-02-09T12:12:12\u201D\n     *\n     * Commit time example: --cdc-stop-position \u201Ccommit_time: 2018-02-09T12:12:12 \u201C\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstopposition\n     */\n    readonly cdcStopPosition?: string;\n\n    /**\n     * An identifier for the replication task.\n     *\n     * Constraints:\n     *\n     * - Must contain 1-255 alphanumeric characters or hyphens.\n     * - First character must be a letter.\n     * - Cannot end with a hyphen or contain two consecutive hyphens.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationtaskidentifier\n     */\n    readonly replicationTaskIdentifier?: string;\n\n    /**\n     * Overall settings for the task, in JSON format. For more information, see [Specifying Task Settings for AWS Database Migration Service Tasks](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationtasksettings\n     */\n    readonly replicationTaskSettings?: string;\n\n    /**\n     * A friendly name for the resource identifier at the end of the `EndpointArn` response parameter that is returned in the created `Endpoint` object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as `Example-App-ARN1` . For example, this value might result in the `EndpointArn` value `arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1` . If you don't specify a `ResourceIdentifier` value, AWS DMS generates a default identifier value for the end of `EndpointArn` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-resourceidentifier\n     */\n    readonly resourceIdentifier?: string;\n\n    /**\n     * One or more tags to be assigned to the replication task.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-tags\n     */\n    readonly tags?: cdk.CfnTag[];\n\n    /**\n     * `AWS::DMS::ReplicationTask.TaskData`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-taskdata\n     */\n    readonly taskData?: string;\n}\n\n/**\n * Determine whether the given properties match those of a `CfnReplicationTaskProps`\n *\n * @param properties - the TypeScript properties of a `CfnReplicationTaskProps`\n *\n * @returns the result of the validation.\n */\nfunction CfnReplicationTaskPropsValidator(properties: any): cdk.ValidationResult {\n    if (!cdk.canInspect(properties)) { return cdk.VALIDATION_SUCCESS; }\n    const errors = new cdk.ValidationResults();\n    if (typeof properties !== 'object') {\n        errors.collect(new cdk.ValidationResult('Expected an object, but received: ' + JSON.stringify(properties)));\n    }\n    errors.collect(cdk.propertyValidator('cdcStartPosition', cdk.validateString)(properties.cdcStartPosition));\n    errors.collect(cdk.propertyValidator('cdcStartTime', cdk.validateNumber)(properties.cdcStartTime));\n    errors.collect(cdk.propertyValidator('cdcStopPosition', cdk.validateString)(properties.cdcStopPosition));\n    errors.collect(cdk.propertyValidator('migrationType', cdk.requiredValidator)(properties.migrationType));\n    errors.collect(cdk.propertyValidator('migrationType', cdk.validateString)(properties.migrationType));\n    errors.collect(cdk.propertyValidator('replicationInstanceArn', cdk.requiredValidator)(properties.replicationInstanceArn));\n    errors.collect(cdk.propertyValidator('replicationInstanceArn', cdk.validateString)(properties.replicationInstanceArn));\n    errors.collect(cdk.propertyValidator('replicationTaskIdentifier', cdk.validateString)(properties.replicationTaskIdentifier));\n    errors.collect(cdk.propertyValidator('replicationTaskSettings', cdk.validateString)(properties.replicationTaskSettings));\n    errors.collect(cdk.propertyValidator('resourceIdentifier', cdk.validateString)(properties.resourceIdentifier));\n    errors.collect(cdk.propertyValidator('sourceEndpointArn', cdk.requiredValidator)(properties.sourceEndpointArn));\n    errors.collect(cdk.propertyValidator('sourceEndpointArn', cdk.validateString)(properties.sourceEndpointArn));\n    errors.collect(cdk.propertyValidator('tableMappings', cdk.requiredValidator)(properties.tableMappings));\n    errors.collect(cdk.propertyValidator('tableMappings', cdk.validateString)(properties.tableMappings));\n    errors.collect(cdk.propertyValidator('tags', cdk.listValidator(cdk.validateCfnTag))(properties.tags));\n    errors.collect(cdk.propertyValidator('targetEndpointArn', cdk.requiredValidator)(properties.targetEndpointArn));\n    errors.collect(cdk.propertyValidator('targetEndpointArn', cdk.validateString)(properties.targetEndpointArn));\n    errors.collect(cdk.propertyValidator('taskData', cdk.validateString)(properties.taskData));\n    return errors.wrap('supplied properties not correct for \"CfnReplicationTaskProps\"');\n}\n\n/**\n * Renders the AWS CloudFormation properties of an `AWS::DMS::ReplicationTask` resource\n *\n * @param properties - the TypeScript properties of a `CfnReplicationTaskProps`\n *\n * @returns the AWS CloudFormation properties of an `AWS::DMS::ReplicationTask` resource.\n */\n// @ts-ignore TS6133\nfunction cfnReplicationTaskPropsToCloudFormation(properties: any): any {\n    if (!cdk.canInspect(properties)) { return properties; }\n    CfnReplicationTaskPropsValidator(properties).assertSuccess();\n    return {\n        MigrationType: cdk.stringToCloudFormation(properties.migrationType),\n        ReplicationInstanceArn: cdk.stringToCloudFormation(properties.replicationInstanceArn),\n        SourceEndpointArn: cdk.stringToCloudFormation(properties.sourceEndpointArn),\n        TableMappings: cdk.stringToCloudFormation(properties.tableMappings),\n        TargetEndpointArn: cdk.stringToCloudFormation(properties.targetEndpointArn),\n        CdcStartPosition: cdk.stringToCloudFormation(properties.cdcStartPosition),\n        CdcStartTime: cdk.numberToCloudFormation(properties.cdcStartTime),\n        CdcStopPosition: cdk.stringToCloudFormation(properties.cdcStopPosition),\n        ReplicationTaskIdentifier: cdk.stringToCloudFormation(properties.replicationTaskIdentifier),\n        ReplicationTaskSettings: cdk.stringToCloudFormation(properties.replicationTaskSettings),\n        ResourceIdentifier: cdk.stringToCloudFormation(properties.resourceIdentifier),\n        Tags: cdk.listMapper(cdk.cfnTagToCloudFormation)(properties.tags),\n        TaskData: cdk.stringToCloudFormation(properties.taskData),\n    };\n}\n\n// @ts-ignore TS6133\nfunction CfnReplicationTaskPropsFromCloudFormation(properties: any): cfn_parse.FromCloudFormationResult<CfnReplicationTaskProps> {\n    properties = properties == null ? {} : properties;\n    if (typeof properties !== 'object') {\n        return new cfn_parse.FromCloudFormationResult(properties);\n    }\n    const ret = new cfn_parse.FromCloudFormationPropertyObject<CfnReplicationTaskProps>();\n    ret.addPropertyResult('migrationType', 'MigrationType', cfn_parse.FromCloudFormation.getString(properties.MigrationType));\n    ret.addPropertyResult('replicationInstanceArn', 'ReplicationInstanceArn', cfn_parse.FromCloudFormation.getString(properties.ReplicationInstanceArn));\n    ret.addPropertyResult('sourceEndpointArn', 'SourceEndpointArn', cfn_parse.FromCloudFormation.getString(properties.SourceEndpointArn));\n    ret.addPropertyResult('tableMappings', 'TableMappings', cfn_parse.FromCloudFormation.getString(properties.TableMappings));\n    ret.addPropertyResult('targetEndpointArn', 'TargetEndpointArn', cfn_parse.FromCloudFormation.getString(properties.TargetEndpointArn));\n    ret.addPropertyResult('cdcStartPosition', 'CdcStartPosition', properties.CdcStartPosition != null ? cfn_parse.FromCloudFormation.getString(properties.CdcStartPosition) : undefined);\n    ret.addPropertyResult('cdcStartTime', 'CdcStartTime', properties.CdcStartTime != null ? cfn_parse.FromCloudFormation.getNumber(properties.CdcStartTime) : undefined);\n    ret.addPropertyResult('cdcStopPosition', 'CdcStopPosition', properties.CdcStopPosition != null ? cfn_parse.FromCloudFormation.getString(properties.CdcStopPosition) : undefined);\n    ret.addPropertyResult('replicationTaskIdentifier', 'ReplicationTaskIdentifier', properties.ReplicationTaskIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationTaskIdentifier) : undefined);\n    ret.addPropertyResult('replicationTaskSettings', 'ReplicationTaskSettings', properties.ReplicationTaskSettings != null ? cfn_parse.FromCloudFormation.getString(properties.ReplicationTaskSettings) : undefined);\n    ret.addPropertyResult('resourceIdentifier', 'ResourceIdentifier', properties.ResourceIdentifier != null ? cfn_parse.FromCloudFormation.getString(properties.ResourceIdentifier) : undefined);\n    ret.addPropertyResult('tags', 'Tags', properties.Tags != null ? cfn_parse.FromCloudFormation.getArray(cfn_parse.FromCloudFormation.getCfnTag)(properties.Tags) : undefined as any);\n    ret.addPropertyResult('taskData', 'TaskData', properties.TaskData != null ? cfn_parse.FromCloudFormation.getString(properties.TaskData) : undefined);\n    ret.addUnrecognizedPropertiesAsExtra(properties);\n    return ret;\n}\n\n/**\n * A CloudFormation `AWS::DMS::ReplicationTask`\n *\n * The `AWS::DMS::ReplicationTask` resource creates an AWS DMS replication task.\n *\n * @cloudformationResource AWS::DMS::ReplicationTask\n * @stability external\n *\n * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html\n */\nexport class CfnReplicationTask extends cdk.CfnResource implements cdk.IInspectable {\n    /**\n     * The CloudFormation resource type name for this resource class.\n     */\n    public static readonly CFN_RESOURCE_TYPE_NAME = \"AWS::DMS::ReplicationTask\";\n\n    /**\n     * A factory method that creates a new instance of this class from an object\n     * containing the CloudFormation properties of this resource.\n     * Used in the @aws-cdk/cloudformation-include module.\n     *\n     * @internal\n     */\n    public static _fromCloudFormation(scope: constructs.Construct, id: string, resourceAttributes: any, options: cfn_parse.FromCloudFormationOptions): CfnReplicationTask {\n        resourceAttributes = resourceAttributes || {};\n        const resourceProperties = options.parser.parseValue(resourceAttributes.Properties);\n        const propsResult = CfnReplicationTaskPropsFromCloudFormation(resourceProperties);\n        const ret = new CfnReplicationTask(scope, id, propsResult.value);\n        for (const [propKey, propVal] of Object.entries(propsResult.extraProperties))  {\n            ret.addPropertyOverride(propKey, propVal);\n        }\n        options.parser.handleAttributes(ret, resourceAttributes, id);\n        return ret;\n    }\n\n    /**\n     * The migration type. Valid values: `full-load` | `cdc` | `full-load-and-cdc`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-migrationtype\n     */\n    public migrationType: string;\n\n    /**\n     * The Amazon Resource Name (ARN) of a replication instance.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationinstancearn\n     */\n    public replicationInstanceArn: string;\n\n    /**\n     * An Amazon Resource Name (ARN) that uniquely identifies the source endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-sourceendpointarn\n     */\n    public sourceEndpointArn: string;\n\n    /**\n     * The table mappings for the task, in JSON format. For more information, see [Using Table Mapping to Specify Task Settings](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TableMapping.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-tablemappings\n     */\n    public tableMappings: string;\n\n    /**\n     * An Amazon Resource Name (ARN) that uniquely identifies the target endpoint.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-targetendpointarn\n     */\n    public targetEndpointArn: string;\n\n    /**\n     * Indicates when you want a change data capture (CDC) operation to start. Use either CdcStartPosition or CdcStartTime to specify when you want a CDC operation to start. Specifying both values results in an error.\n     *\n     * The value can be in date, checkpoint, or LSN/SCN format.\n     *\n     * Date Example: --cdc-start-position \u201C2018-03-08T12:12:12\u201D\n     *\n     * Checkpoint Example: --cdc-start-position \"checkpoint:V1#27#mysql-bin-changelog.157832:1975:-1:2002:677883278264080:mysql-bin-changelog.157832:1876#0#0#*#0#93\"\n     *\n     * LSN Example: --cdc-start-position \u201Cmysql-bin-changelog.000024:373\u201D\n     *\n     * > When you use this task setting with a source PostgreSQL database, a logical replication slot should already be created and associated with the source endpoint. You can verify this by setting the `slotName` extra connection attribute to the name of this logical replication slot. For more information, see [Extra Connection Attributes When Using PostgreSQL as a Source for AWS DMS](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Source.PostgreSQL.html#CHAP_Source.PostgreSQL.ConnectionAttrib) .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstartposition\n     */\n    public cdcStartPosition: string | undefined;\n\n    /**\n     * Indicates the start time for a change data capture (CDC) operation.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstarttime\n     */\n    public cdcStartTime: number | undefined;\n\n    /**\n     * Indicates when you want a change data capture (CDC) operation to stop. The value can be either server time or commit time.\n     *\n     * Server time example: --cdc-stop-position \u201Cserver_time:2018-02-09T12:12:12\u201D\n     *\n     * Commit time example: --cdc-stop-position \u201Ccommit_time: 2018-02-09T12:12:12 \u201C\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-cdcstopposition\n     */\n    public cdcStopPosition: string | undefined;\n\n    /**\n     * An identifier for the replication task.\n     *\n     * Constraints:\n     *\n     * - Must contain 1-255 alphanumeric characters or hyphens.\n     * - First character must be a letter.\n     * - Cannot end with a hyphen or contain two consecutive hyphens.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationtaskidentifier\n     */\n    public replicationTaskIdentifier: string | undefined;\n\n    /**\n     * Overall settings for the task, in JSON format. For more information, see [Specifying Task Settings for AWS Database Migration Service Tasks](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_Tasks.CustomizingTasks.TaskSettings.html) in the *AWS Database Migration Service User Guide.*\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-replicationtasksettings\n     */\n    public replicationTaskSettings: string | undefined;\n\n    /**\n     * A friendly name for the resource identifier at the end of the `EndpointArn` response parameter that is returned in the created `Endpoint` object. The value for this parameter can have up to 31 characters. It can contain only ASCII letters, digits, and hyphen ('-'). Also, it can't end with a hyphen or contain two consecutive hyphens, and can only begin with a letter, such as `Example-App-ARN1` . For example, this value might result in the `EndpointArn` value `arn:aws:dms:eu-west-1:012345678901:rep:Example-App-ARN1` . If you don't specify a `ResourceIdentifier` value, AWS DMS generates a default identifier value for the end of `EndpointArn` .\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-resourceidentifier\n     */\n    public resourceIdentifier: string | undefined;\n\n    /**\n     * One or more tags to be assigned to the replication task.\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-tags\n     */\n    public readonly tags: cdk.TagManager;\n\n    /**\n     * `AWS::DMS::ReplicationTask.TaskData`\n     *\n     * @link http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-dms-replicationtask.html#cfn-dms-replicationtask-taskdata\n     */\n    public taskData: string | undefined;\n\n    /**\n     * Create a new `AWS::DMS::ReplicationTask`.\n     *\n     * @param scope - scope in which this resource is defined\n     * @param id    - scoped id of the resource\n     * @param props - resource properties\n     */\n    constructor(scope: constructs.Construct, id: string, props: CfnReplicationTaskProps) {\n        super(scope, id, { type: CfnReplicationTask.CFN_RESOURCE_TYPE_NAME, properties: props });\n        cdk.requireProperty(props, 'migrationType', this);\n        cdk.requireProperty(props, 'replicationInstanceArn', this);\n        cdk.requireProperty(props, 'sourceEndpointArn', this);\n        cdk.requireProperty(props, 'tableMappings', this);\n        cdk.requireProperty(props, 'targetEndpointArn', this);\n\n        this.migrationType = props.migrationType;\n        this.replicationInstanceArn = props.replicationInstanceArn;\n        this.sourceEndpointArn = props.sourceEndpointArn;\n        this.tableMappings = props.tableMappings;\n        this.targetEndpointArn = props.targetEndpointArn;\n        this.cdcStartPosition = props.cdcStartPosition;\n        this.cdcStartTime = props.cdcStartTime;\n        this.cdcStopPosition = props.cdcStopPosition;\n        this.replicationTaskIdentifier = props.replicationTaskIdentifier;\n        this.replicationTaskSettings = props.replicationTaskSettings;\n        this.resourceIdentifier = props.resourceIdentifier;\n        this.tags = new cdk.TagManager(cdk.TagType.STANDARD, \"AWS::DMS::ReplicationTask\", props.tags, { tagPropertyName: 'tags' });\n        this.taskData = props.taskData;\n    }\n\n    /**\n     * Examines the CloudFormation resource and discloses attributes.\n     *\n     * @param inspector - tree inspector to collect and process attributes\n     *\n     */\n    public inspect(inspector: cdk.TreeInspector) {\n        inspector.addAttribute(\"aws:cdk:cloudformation:type\", CfnReplicationTask.CFN_RESOURCE_TYPE_NAME);\n        inspector.addAttribute(\"aws:cdk:cloudformation:props\", this.cfnProperties);\n    }\n\n    protected get cfnProperties(): { [key: string]: any }  {\n        return {\n            migrationType: this.migrationType,\n            replicationInstanceArn: this.replicationInstanceArn,\n            sourceEndpointArn: this.sourceEndpointArn,\n            tableMappings: this.tableMappings,\n            targetEndpointArn: this.targetEndpointArn,\n            cdcStartPosition: this.cdcStartPosition,\n            cdcStartTime: this.cdcStartTime,\n            cdcStopPosition: this.cdcStopPosition,\n            replicationTaskIdentifier: this.replicationTaskIdentifier,\n            replicationTaskSettings: this.replicationTaskSettings,\n            resourceIdentifier: this.resourceIdentifier,\n            tags: this.tags.renderTags(),\n            taskData: this.taskData,\n        };\n    }\n\n    protected renderProperties(props: {[key: string]: any}): { [key: string]: any }  {\n        return cfnReplicationTaskPropsToCloudFormation(props);\n    }\n}\n"],
  "mappings": "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",
  "names": []
}

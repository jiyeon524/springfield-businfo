{
  "version": 3,
  "sources": ["policy.ts"],
  "sourcesContent": ["import { PolicyDocument } from '../../aws-iam';\nimport { Resource } from '../../core';\nimport { Construct } from 'constructs';\nimport { IQueue } from './queue-base';\nimport { CfnQueuePolicy } from './sqs.generated';\n\n/**\n * Properties to associate SQS queues with a policy\n */\nexport interface QueuePolicyProps {\n  /**\n   * The set of queues this policy applies to.\n   */\n  readonly queues: IQueue[];\n}\n\n/**\n * The policy for an SQS Queue\n *\n * Policies define the operations that are allowed on this resource.\n *\n * You almost never need to define this construct directly.\n *\n * All AWS resources that support resource policies have a method called\n * `addToResourcePolicy()`, which will automatically create a new resource\n * policy if one doesn't exist yet, otherwise it will add to the existing\n * policy.\n *\n * Prefer to use `addToResourcePolicy()` instead.\n */\nexport class QueuePolicy extends Resource {\n  /**\n   * The IAM policy document for this policy.\n   */\n  public readonly document = new PolicyDocument();\n\n  /**\n   * Not currently supported by AWS CloudFormation.\n   * @attribute\n   */\n  public readonly queuePolicyId: string;\n\n  constructor(scope: Construct, id: string, props: QueuePolicyProps) {\n    super(scope, id);\n\n    const resource = new CfnQueuePolicy(this, 'Resource', {\n      policyDocument: this.document,\n      queues: props.queues.map(q => q.queueUrl),\n    });\n\n    this.queuePolicyId = resource.attrId;\n  }\n}\n"],
  "mappings": "kNAAA,UAAA,QAAA,eAAA,EACA,OAAA,QAAA,YAAA,EAGA,gBAAA,QAAA,iBAAA,EA0BA,MAAa,mBAAoB,QAAA,QAAQ,CAYvC,YAAY,MAAkB,GAAY,MAAuB,CAC/D,MAAM,MAAO,EAAE,EATD,KAAA,SAAW,GAAI,WAAA,mFAW7B,KAAM,UAAW,GAAI,iBAAA,eAAe,KAAM,WAAY,CACpD,eAAgB,KAAK,SACrB,OAAQ,MAAM,OAAO,IAAI,GAAK,EAAE,QAAQ,EACzC,EAED,KAAK,cAAgB,SAAS,QApBlC,QAAA,YAAA",
  "names": []
}
